%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (glennt) ()
%%Title: (yahoo_logo.eps)
%%CreationDate: 12/9/09 1:33 PM
%%Canvassize: 16383
%%BoundingBox: 130 424 489 492
%%HiResBoundingBox: 130.6147 424.0757 488.207 491.8672
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 0.55 1 0 0.15 (PANTONE 259 C)
%%CMYKProcessColor: 0.75021 0.679683 0.670222 0.90164 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 18 40 594 774
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -410 813 1.28 1835 1057 18 0 0 43 129 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 24 8
%%BeginData: 4702 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD78FF784772719C78A2FF71727172719C71727178717271727171
%71FD67FF71474747464771FF71FD0447466B4747476B476B47727172FD56
%FFA8A9FD05A2CBFD09FF9C476B476B47A3FFFFFFA8CBA27146474747466B
%A8FD30FF78466B47714771476B47CBFD1BFFA97171464746472247464746
%6B71A2FD06FF774746474747A8FD07FF72476B476B4778FD08FF71727172
%4D72717271727172477178FD0DFFCBFFFFFFCBFFFFFFCBFFFFFFA29C7172
%476B477278A3FD1AFFA272FD054772719C7172476B47474778CBFD04FF9C
%476B474771FD09FF724747476B4678FD07FFA2476B47474647474746FD04
%47CBFD0AFF71FD04476B474746474747A8FD06FF71466BCBFD08FFCBA29C
%71724772717878CBFD08FF714746474771A2FD07FFA2784747466BA8FFFF
%FF7847476B46A2FD0AFF72476B476B47A2FD0AFFA247476B4778A2CBFD0D
%FFCBA2A3A271476B479CA2A9A2FD07FF714747FD07FFA272474746FD0847
%72A8FD05FF71FD0447A9FD0BFFCB47474772FFFFFFA2476B476BA8FD0AFF
%A86B4647464747A9FD08FFA872474747A8FD04FFA8FFA8FFCBFFA8FFA9FD
%07FF4D47466BFD0AFFA86B4747A8FD05FF4D4746474778A2CBA8CBA2A271
%47464778FFFFFF7847464747A8FD0DFFA2464746A2FFFF77FD0447FD0CFF
%CB6B476B476B47FD07FFA972474771FD05FFA24747714771476B47A3FD07
%FF78476B47FD0BFF476B47FD05FF4747476BA2FD09FFA871474778FFFF71
%476B479CFD0FFF72476B71FFFFA2476B479CFD0DFFA247476B474747FD05
%FFA2474647A2FD07FFA8724647474777FD09FF71474672FD0BFF6B4747A8
%FFFFFFFD0447A8FD0BFFA2474747A8FFFD0447A2FD0FFF7147476BCBFF78
%47474778FD0EFFA247476B474771FFFFFF77474771A8FD09FF7147716B47
%9CFD09FF78476B479C789C7778717871787172476B47CBFFFFA24747479C
%FD0DFF476B47A2CB6B476B47A9FD0FFF78474747FFFFA2466B47CBFD0FFF
%78474647474777FF47472278FD0AFF784771FF474747CBFD08FF71474747
%2247464746474647464747474647A2FFFF78464746A9FD0DFF71464777FF
%FD044778FD0FFF47474671FFFF78474671FD11FF7147476B476B474747A2
%FD0AFFCB7147CBFF9C474778FD08FF78476B47A2A2A9A2CBA8CBCBFFFFFF
%476B47CBFFFF7847476BA2FD0DFF476B479CFFA2476B4772FD0EFFA26B47
%47A2FFFFA2476B78FD12FFFD0747A2FD0BFF9C2278FFFFA8474771CBFD07
%FF71474771FD0BFF714647A2FFFF9C4647469CFD0CFFCB474747A2FFA871
%47474678FD0CFFA847464771FFFFFF774722A2FD12FFCB476B476B4772FD
%0CFF474747787172476B47A2FD07FF72476B47FD0BFF714747A3FFFFA247
%476B47CBFD0BFF9C474747FFFFFFCB72476B4772A8FD09FF786B474771FD
%05FFA8CBCBFD12FFA8474647474771FD0BFF7147477171787771464747FD
%07FF47474647A8FD05FFCBFD04FF714747A2FFFFFF7147474746A2FD08FF
%A878464747A9FD05FF9C47474647477878A2A2A277724747226BA2FD09FF
%A8FD12FF476B476B479CFD0AFFA26B47A2FD05FF714747A2FFFFA9717871
%6B476B4772719C78FFFFFFA2787172476B477278A2FFFF9C6B476B477178
%A3A2CBA2A2716B47476BCBFD08FF78724747464747474647476B71A3FD06
%FFA89CA2A3A9FFCBA9CBFD0EFFA847476B474777FD0AFF714678FD06FF78
%474771FFFF714746FD04476B47474647CBFFFFA24747476BFD0547FFFFFF
%A9A24747464722474647224747717EFD0CFFCB78787178717878A2A8FD08
%FFA8464746A9FF9C7178FD0FFF476B476B479CFD07FFA97872474771A2A8
%FD05FF476B47A9FFFFCBFFA9FFCBFFA9FFCBFFA9FD13FFA9CBA2A278A278
%A2A2FD21FFA247466BFFFF789C78FD0EFFA8474747464771FD06FFA92247
%464746472278FD05FF78464747FD4BFF7E9C78FFFFA978A9FD0BFFCBCBA8
%9C476B476B4771A2CBA2A9A2FFCBA9A2FFA8CBA8CBFFFFFFCB476B476B47
%47477171FD59FFA222474647464747474647474722474647A2FD0BFFA272
%7178717871787178FD59FFA29C78A3A2A3A2A3A2A3A2A3A2A3A2A3A2FD6E
%FFCBFD76FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
<
000001010201020203030404050505060607070707080809090A0A0B0B0C0B0D0C0D0D0F0E101011
1112121313141415151616171719191A1A1A1B1B1C1C1D1D1F1F2020212122222323242425252626
272729282A
>
<
0B0C0B0D0E0F0F101113121314151516171818191A1B1B1C1D1E1E1F202122212323252425262827
28292A2B2B2C2D2E2F2F30313332343536383739393B3C3C3D3E3F3F40424344444546474848494A
4B4C4C4D4E
>
<
22222425262527282A2A2C2D2E2E3031323334353637393A3A3B3D3C3D3E3E404142434445464748
494A4B4C4E4E4F50515354555658595A5B5C5E5F6061626364656668696A6B6B6D6E6F7071737475
7677797A7C
>
0.000031
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEC
ECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9
D8D8D7D7D6
>
<
F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4
D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4
B3B2B2B1B0
>
<
DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A89
>
4 %_Br
<
2A2B2A2C2D2D2E2F2F303132323334343536373738393A3A3B3B3B3C3D3E3D3E3F40404041424243
444444454546454647464747484748484948494A4A4A4A4B4B4B4C4C4D4C4D4E4E4F4E4F4F504F4F
50504F505050505051515151515251525252525252
>
<
4E4F50515152535455565758595A5B5D5D5D5E606162636465666869696A6B6C6D6E6F7071707172
7374767778787A7B7C7D7E7F8081828384858687888A8B8C8D8E8F9091929192939495969797999A
9B9C9E9F9FA0A2A3A4A5A7A8A9A9ABACADAEAFB0B1
>
<
7C7D7E7F8180828384858687898A8B8C8E90919294959698999A999B9C9D9E9FA0A1A2A3A4A6A7A9
AAABACACAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CBCCCDCECFD0D1D2D4
D5D6D7D8D9DBDCDDDFE0E1E3E4E6E7E8EAECEDF0F2
>
<
00000000000000000000000000010101010101020202030303030304040405050606070708080909
0A0B0B0C0D0E0E0F1010111213131415161618191A1A1B1C1D1E1F202122232425262728292A2B2C
2D2F2F3032333335363738393B3C3D3E3F41414244
>
<
D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBA
B9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C
9B9A9A999897979695949493929191908F8E8E8D8C
>
<
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A6968676665
64636261605F5E5D5C5B5A59585756555453525150
>
<
89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
<
5252535353545454545455555556565656575757575858585858595958585858595959595A5A5A5B
5B5B5B5C5C5C5D5D5D5E5E5F5F60606061
>
<
B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C8C8C9CBCECFD0D1D2D2D3D4D5D6D6
D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E3E4
>
<
F2F2F4F3F2F4F3F1F3F1EFF1EFEDEDECEBEDEDEDEFEEEDEEECEAEBE9E8E8E7E8E6E5E6E5E4E5E3E1
E2E0DEDFDDDBDCDBDADBDAD8D9D7D5D6D4
>
<
44454648494A4C4D4F505253555658595A5C5D5F6062646567686A6C6C6E707173747677797B7D7E
8082838587888A8B8D8E9091939596989A
>
<
8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A5958575655
>
<
504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817
>
<
27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A
1919191818181717171616161515151414
>
4 %_Br
[
0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 %_BS
%_0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 Bs
0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS
%_0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs
0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 %_BS
%_0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 Bs
0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 %_BS
%_0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
393B3C3C3D3E3F414143444646474849494A4C4D4D4E4F4F505152525354545657575859595A5C5C
5D5E5E5F606061616263636464656567686869696A6A6B6B6D6D6E6E6F6E706F7070717171727274
73737574767676777777777878787879797979
>
<
58595A5C5D5E5F60626364656768696A6C6B6C6E6F7071737475767677787A7B7C7E7E7F80828385
8485878889898B8C8E8D8F9091919394939596969799989A9B9B9C9E9D9F9EA0A2A2A3A3A4A4A6A5
A7A7A8A8AAAAABABABACACACADADADAEAEAEAE
>
<
2E2F2E2F302F30313032333233343335353637363737373738373838393A393A393A3B3C3C3B3C3B
3D3C3D3C3D3D3E3F3E4040413F414041414041414241434243434243434444444343444443454444
45454446454546464645464645454746464646
>
<
00000000000000000000000000000000000000000000000000000000000000000101010101010101
01010101020202020202020303030303040404040404050505050505060606070707070707080808
0808080909090A0A0A0A0B0B0B0B0B0B0B0B0B
>
<
C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9
A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A9999989897979696959595949493
93939292919191909090908F8F8F8F8E8E8E8E
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483
838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A6969
68686767666665656564646463636362626262
>
<
B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C
9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A
89898988888887878787868686868585858585
>
4 %_Br
<
202122232425262728292A2B2C2E2F30313233343637373839
>
<
4142434546474647484A4B4C4D4E4F50515252535454565758
>
<
52504F4D4D4A4B494846454340403E3D3B3A3838353432312E
>
0.000031
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5
>
<
BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7
>
<
A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4
>
4 %_Br
<
05060708090A0A0B0C0D0E0F10121314161718191A1B1C1C1C1D1F20
>
<
2C2D2E2E2F3031323332343536373738393A3A3B3C3D3D3E3F404041
>
<
7B7977777573716F6D6D6B6A686667656361615F5D5B5B5957545552
>
0.000031
<
F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE
>
<
D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD
>
<
929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7
>
4 %_Br
<
03030303030304030303040404040404040404040404040405050505050505060505050505050506
06060606050505050505050505050506050505050505
>
<
7C7B79787876757472716F6E6D6B6A69676766646362605F5E5D5B5A595756545352514F4E4D4B4A
494746444342403F3D3C3B39383736343332302F2E2C
>
<
9F9E9E9D9D9C9B9B9A999A989798979696959494939293929191908F8E8F8D8C8D8C8B8B8A898889
8887878785848483828281807F7F7E7D7E7D7C7B7C7B
>
0.000031
<
F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6
F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
>
<
9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
>
<
6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282
838484858687878889898A8B8C8C8D8E8E8F90919192
>
4 %_Br
<
282727262626252423232221212020201F1E1D1D1C1B1B1A19191817161615141413121211100E0E
0D0B0B0A09090807060605040403
>
<
9F9E9E9D9C9C9B9C9A999998979796959594939392939190908F8E8F8E8C8D8B8A8A898988878886
85858382828180807F7F7E7D7D7C
>
<
F0EFEDEBEAE8E7E5E3E1DFDEDDDBD9D8D6D5D3D1D0CFCDCCCAC9C8C5C3C2C1BFBEBDBBBAB9B7B6B4
B3B1AFAEACABA9A7A6A4A3A2A09F
>
<
07060606050505050404040303030303020202020202020101010101010101010100000000000000
0000000000000000000000000000
>
<
CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9
EAEBEBECEDEDEEEFF0F0F1F2F2F3
>
<
75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E
8F8F909191929393949495969697
>
<
32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A
5B5C5D5E5F606162636465666768
>
4 %_Br
[
0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 %_BS
%_0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 Bs
0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS
%_0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs
0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 %_BS
%_0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 Bs
0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 %_BS
%_0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 Bs
0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS
%_0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs
0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 %_BS
%_0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4
D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D
9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866
656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A39373634333230
2F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB
>
<
404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B3939393939393939393939393939393737
37373737373636363636363636353535353535353535363636363535343434343434343434353535
35353534343434343434343434343434343232323232323232323232323232323030303030303131
313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E
2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828
>
<
1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818
19181818181818181818181818161616151515151514141313131313121212121212121212111111
1110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505
05050404040303030303030303030303030202020202010101010101010101010101010100000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
<
C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9
D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2
F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81
838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCE
D0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF
>
<
3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A383939383837383837383637383637363637
36363536373636373636353536343534343433333233343333323334333433333433343433343334
35343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40
>
<
00010101010101010101010101010102020202020303030303030303040404050405050505050606
06070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10
10101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3
D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCB
CBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4
>
<
3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C
3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D
3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E
>
<
FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6
B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271
706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B
>
<
1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312
121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A090909090808080707070706
06060605050504040404030303030302020202020201010101010101010101010000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F
4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A
6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F9091929394
95969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3
D4D5D5D5D6D6D7D8D8D9D9DADA
>
<
00000100010101010201020202020302030203030303040304040404030404040405040505050506
0607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E
0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B
1C1B1C1C1D1D1E1E1F1F201F20202021212221222223232423252425252626272627272828292928
2A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A
3A3B3B3C3C3D3D3D3D3E3E3F3F
>
<
F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFDFD
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010101010101010202020202020202020303030303030403040404040404050405050505060606
0606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F1010111112121313141415
1516161717181819191A1A1C1B
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
02020202020202020303030303030303030101010101010102020101010202020202020202020202
02020202020303030303030203030303030303030303030303040404040404040404040404040405
05050505050505050505060606060606060707070707070707080808080909080808080808080908
08080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F
0F0F0F0F0F1010101010101010101010111111111212121212121312121213131313131314141414
14141515
>
<
FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1
E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5
B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B
797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A484745444241
3F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B09080705
04030100
>
<
F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFE
FEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9
F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7
F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1
F2F2F2F1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
[
0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS
%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs
0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs
0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
02020202020202020303030303030303030101010101010102020101010202020202020202020202
02020202020303030303030203030303030303030303030303040404040404040404040404040405
05050505050505050505060606060606060707070707070707080808080909080808080808080908
08080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F
0F0F0F0F0F1010101010101010101010111111111212121212121312121213131313131314141414
14141515
>
<
FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1
E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5
B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B
797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A484745444241
3F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B09080705
04030100
>
<
F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFE
FEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9
F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7
F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1
F2F2F2F1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2
>
<
1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D
6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBD
BEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
E6E7E8E9
>
<
24242424242424242424242424242424242424242424242424242525252525252525252525252525
25252525252525252525252525252525252525252525252525252525252525252525252525262626
26262626262626262626262626262626262626262626262626262626262626262626262626262626
26262626262626272727272727272727272727272727272727272727272727272727272727272727
27272727272727272727272727272727272728282828282828282828282828282828282828282828
28282828
>
4 %_Br
<
15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F
4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A
6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F9091929394
95969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3
D4D5D5D5D6D6D7D8D8D9D9DADA
>
<
00000100010101010201020202020302030203030303040304040404030404040405040505050506
0607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E
0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B
1C1B1C1C1D1D1E1E1F1F201F20202021212221222223232423252425252626272627272828292928
2A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A
3A3B3B3C3C3D3D3D3D3E3E3F3F
>
<
F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFDFD
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010101010101010202020202020202020303030303030403040404040404050405050505060606
0606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F1010111112121313141415
1516161717181819191A1A1C1B
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E
>
<
E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3
C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0
AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D
9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A89
89888887878686858584848383
>
<
282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D
2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F30303030303030303031313131313131
31323232323232323232333333333333333334343434343434343535353535353535353636363636
36363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F
40404040404040404141414141
>
4 %_Br
<
DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3
D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCB
CBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4
>
<
3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C
3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D
3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E
>
<
FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6
B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271
706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B
>
<
1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312
121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A090909090808080707070706
06060605050504040404030303030302020202020201010101010101010101010000
>
<
1E1E1E1E1E1F1F1F1F1F1F1F1F1F2020202020202020212121212121212121222222222222222222
23232323232323232424242424242424242525252525252525252626262626262626272727272727
27272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B
>
<
83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A
8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909091919191919192
92929292939393939394949494949495959595959696969696979797979797989898
>
<
4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768
696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9
D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2
F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81
838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCE
D0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF
>
<
3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A383939383837383837383637383637363637
36363536373636373636353536343534343433333233343333323334333433333433343433343334
35343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40
>
<
00010101010101010101010101010102020202020303030303030303040404050405050505050606
06070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10
10101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D
>
<
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271
706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
<
B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B
9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A8989888787868585848483
82828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F
>
4 %_Br
<
FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4
D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D
9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866
656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A39373634333230
2F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB
>
<
404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B3939393939393939393939393939393737
37373737373636363636363636353535353535353535363636363535343434343434343434353535
35353534343434343434343434343434343232323232323232323232323232323030303030303131
313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E
2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828
>
<
1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818
19181818181818181818181818161616151515151514141313131313121212121212121212111111
1110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505
05050404040303030303030303030303030202020202010101010101010101010101010100000000
0000000000000000000000000000000000000000000000000000000000000000000000
>
<
2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
27272727272626262626262626262525252525252525252424242424242424232323232323232323
2222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E
1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A
19191919191919191818181818181818181717171717171717171616161616161616161515151515
1515151514141414141414141313131313131313131212121212121212121111111111
>
<
6F6F6F6F6F6F6F6F7070707070707070707070707070707171717171717171717171717171717272
72727272727272727272727272737373737373737373737373737373747474747474747474747474
74747475757575757575757575757575757676767676767676767676767676767777777777777777
777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A
7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C
>
4 %_Br
[
0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS
%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs
0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS
%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs
0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS
%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs
1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS
%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs
0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS
%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
05050505050606060606060707070707070707070707060606060707070707070707070707070707
0707070808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0A0A0A0A0B0B0B0B0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F
10101010101010111111111111101010101010111111111111111111121212121212121212121212
131313131313131313131313131313131313131414141414141414141414141414141414
>
<
E3E2E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C6C5C4C3C3C2C1C0BFBDBC
BBB9B9B8B7B5B4B3B1B1B0AEADACAAA9A9A7A6A5A3A3A2A09F9E9E9C9B9998989695939392908F8F
8D8C8A8A898886868583838280807E7C7C7B79787876767573737270706F6D6D6C6C6A6969676766
646463636161605E5E5D5D5C5C5A5A5959575756565454535352525250504F4F4D4D4D4C4C4B4B4B
4949474747464646454545454343434242424240404040403F3F3F3F3F3F3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFCFCFCFCFC
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
>
<
00000001010101010101000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
>
<
42434445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F606161626364656667
6869696A6B6C6D6E6F6F7071727374757576777879797A7B7C7D7D7E7F8081818283848485868787
88898A8A8B8C8D8D8E8F8F9091919293939495969697979899999A9B9B9C9D9D9E9E9FA0A0A1A1A2
A3A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B0B1B1B2B2B3B3B3B4B4B5B5B5
B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBE
>
<
24242424242424242424242424242424242424242424242424242424242424242424242424242424
24242424242424242424242424242424242424242424242424242424242423232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
232323232323232323232323232323232323232323232323232323232323232323232323
>
4 %_Br
<
15151414141414141313131414141313131312121212121211111111101010101111111111111111
111010101010100F0F0F0F0F0E0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0C0B0B0B0B0B
0A0A0A0A0A0A0A09090909090A0A0B0B0B0A0A0A0A09090909090909090908080808080909080808
08080707070707060606060606060606070707070707070606060606060606060606060505060606
0606060505050505
>
<
00010304050708090B0C0D0E101113141617191B1C1E1F2122242527292A2C2D2E30323335363839
3B3C3D3F404243454648494B4C4D4E505153545657585A5B5D5E606163646667696A6B6D6E707173
747677797A7C7D7F8182848687888A8B8C8E8F9192949597989A9B9D9EA0A1A2A4A5A7A8A9ABACAD
AFB0B1B3B4B5B7B8BABBBCBDBFC0C1C2C3C4C5C7C8C9CACBCCCDCFD0D0D1D2D3D4D5D6D7D9DADBDC
DDDEDFE0E1E2E2E3
>
<
F1F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F1F1F0F0F0F1F1F2F2F3F3F5F5F5F6F6F6F6F6
F6F7F7F7F8F8F8F8F8F9F9F8F8F9F8F8F8F8F8F8F8F7F7F8F8F8F8F8F8F8F8F8F8F8F8F7F7F8F8F8
F8F9F9F9FAFAFAFBFBFCFCFCFDFDFEFEFDFDFDFDFDFDFCFCFBFDFCFCFCFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFDFDFDFEFEFEFFFFFFFFFFFF
FFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000101
0101010101000000
>
<
F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECEC
ECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEA
EAEAEAEAEAEAEAEA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2
C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
4948474645444342
>
<
28282828282828282828282828282828282828282827272727272727272727272727272727272727
27272727272727272727272727272727272727272727272626262626262626262626262626262626
26262626262626262626262626262626262626262626262626252525252525252525252525252525
25252525252525252525252525252525252525252525252525252524242424242424242424242424
2424242424242424
>
4 %_Br
<
212122212121212120202020201F1F1F1F1F1E1F1F1F201E1E1E1E1E1E1D1E1E1E1F1D1E1E1E1E1D
1D1D1D1D1C1D1D1D1E1C1D1D1D1D1C1C1C1C1C1B1C1C1C1C1B1B1B1B1C1B1B1B1B1B1C1A1B1B1B1B
1A1A1A1A1A1919191A1A191919191918181818181717171717161717171716161717171616161717
17161616161615161616161515151515141415
>
<
8684848381817F7E7E7C7B7B7978787674747371716F6E6E6C6C6B69696867676564646261615F5E
5E5C5B5B595857565454535151504F4F4D4C4C4B49494846464544434241413F3F3D3C3C3B393938
37373533333230302E2D2D2B2A292826262523232220201F1D1E1C1A1A1918181614141313121010
0F0E0E0C0B0B0A090907060605040402020100
>
<
1316181A1D1F2225272A2D2E313436393C3E414445484B4C4F515356585A5D5F616365686A6C6F70
727577797C7E80828486898B8D8F90929497989A9D9EA0A2A3A5A7A8AAACADAFB0B2B4B5B7B8B9BA
BABCBDBEC0C2C3C4C5C6C7C8C9CACCCDCECFCFD0D1D3D4D5D6D7D8D9DADBDCDDDEDEDFE0E1E1E2E3
E3E4E5E5E6E7E7E8E9EBECECEDEEEFF0F0F1F1
>
0.000031
<
D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDF
DFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6
E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEE
EEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2
>
<
8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8
A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2
C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDC
DDDEDEDFE0E0E1E2E2E3E4E4E5E6E6E7E8E8E9
>
<
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A2928
>
4 %_Br
<
C1C1C0C0BFC0BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B2B1B1B0AF
AFAEADADACABABAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9E9D9C9B9A99999897969594939291908F
8E8D8C8C8B898887868584838281807F7E7D7C7B7A78787675747372706F6E6D6C6B6A6968676664
636261605F5E5C5B5A59585755545352514F4E4D4C4B4948474645434241403E3D3C3B3A39373635
3332302F2E2D2C2A29282625242221
>
<
303030303133333333333434343435373737373737383838383A3A3B3B3B3B3B3C3C3E3E3E3F3F3F
40404040424343434444444545454747484848494949494B4C4C4C4D4D4D4E4E4E50505151525252
5353535556565757585858595B5B5B5C5C5C5D5D5D5E606061616162626363636566666767676868
696A6B6B6B6C6C6C6D6D6E6F707071717172727373757576767677777778797A7A7A7B7B7B7C7D7D
7F8080808181818282828585858686
>
<
40404040403F3F3F3F3F3F3F3F3E3E3D3D3D3D3D3D3D3D3D3C3B3B3B3B3B3C3C3C3C3B3B3A3A3A3A
3A3A3A3A38383838383838373737363636353535353534333332323232323231313030302F2F2F2F
2F2E2E2D2D2D2C2C2E2E2D2D2C2B2B2B2B2B2B2A2A2A292928282828282727272525252525252525
252323232322222222212120201F1F1F1E1E1E1D1D1C1B1B1B1B1C1C1C1C1A1A1A1A1A1919191918
171716161616161515151413131313
>
0.000031
<
292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8
C9CACBCCCDCECFD0D1D2D3D4D5D6D7
>
<
A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C
9C9C9C9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9999999999999999999998989898989898
98989897979797979797979796969696969696969696959595959595959595959494949494949494
94939393939393939393939292929292929292929291919191919191919190909090909090909090
8F8F8F8F8F8F8F8F8F8F8E8E8E8E8E
>
<
B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4
B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
>
4 %_Br
[
0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 %_BS
%_0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 Bs
0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 %_BS
%_0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 Bs
0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 %_BS
%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 Bs
0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 %_BS
%_0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 Bs
0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 %_BS
%_0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CDCDCECECFCFD0D0D0D1D1D1D2D3D3D3D4D4D5D5D5D5D6D6D6D7D7D7D8D8D8D8D8D8D9D9D9DADADA
DADBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDCDBDB
DBDADBDADADADADAD9D9D9D9D9D9D8D8D8D7D6D5D5D4D3D2D2D3D2D2D0D0CFCECDCCCBCACA
>
<
0A0B0D0E1012131516181A1B1C1E20212224252728292A2C2D2E2F30323334353638393A3B3C3D3E
3F40414242434445464748494A4B4C4D4E4F5051525353545556575758595A5B5C5C5D5E5F5F6061
62636364656666676869696A6B6B6C6C6D6E6F7071727374757576767878797B7C7D7E7F80
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFAF6F6F3F3F1F0F0EFEEECE9E8E6E5E3E2E0
>
<
0000010101010101020202030303040404050506070808090A0B0B0C0D0E1011121314151718191A
1B1D1E1F212223242627292A2C2D2F30323335383A3B3D3F4042444547494A4C4E4F51525456585A
5C5E5F61636567696A6C6E70727476787A7C7E80828486888A8C8E90929496989A9C9EA0A2
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B
1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919
>
<
ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584
838281807F7E7D7C7B7A7978777675747372716F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
>
<
4B4B4A4A4949484848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3B
3A3A3939383838373736363535353434333333323231313030302F2F2E2E2D2D2D2C2C2B2B2A2A2A
29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1A1A
>
4 %_Br
[
0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 %_BS
%_0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 Bs
0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 %_BS
%_0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa
 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa
 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa
 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d
0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa
 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)
0 A
u
u
0 J 0 j 1 w 4 M []0 d
0 XR
-4012.5 4714.4351 m
-3798.8999 4714.4351 L
-3798.8999 4706.6343 L
-4012.5 4706.6343 L
-4012.5 4714.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-4012.5 4710.5352 m
-4002.4856 4713.0269 -3995.6863 4714.375 -3983.7007 4714.4351 c
-3970.7185 4714.5 -3905.6997 4714.4351 y
-3840.6816 4714.5 -3827.6997 4714.4351 v
-3815.7124 4714.375 -3808.9136 4713.0269 -3798.8999 4710.5352 C
-3808.9136 4708.0435 -3815.7124 4706.6953 -3827.6997 4706.6343 c
-3840.6816 4706.5688 -3905.6997 4706.6343 y
-3970.7185 4706.5688 -3983.7007 4706.6343 v
-3995.6863 4706.6953 -4002.4856 4708.0435 -4012.5 4710.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)
0 A
u
0 J 0 j 1 w 4 M []0 d
0 XR
-7885 8587 m
-7787.2451 8587 L
-7787.2451 8566.2842 L
-7885 8566.2842 L
-7885 8587 L
n
0 O
0 g
1 XR
-7787.5586 8582.3184 m
-7802.8247 8568.5303 -7820.5537 8589.4492 -7835.9277 8577.166 C
-7834.4199 8571.5137 -7828.7598 8578.4678 -7826.5176 8573.8213 C
-7826.4341 8572.2207 -7829.6313 8573.7207 -7829.5127 8571.6006 C
-7827.6245 8568.1914 -7822.8955 8568.6885 -7821.5664 8572.7373 C
-7815.3115 8570.7676 -7808.7734 8564.8242 -7802.7847 8566.6172 C
-7801.2671 8567.9678 -7802.0708 8569.1514 -7801.6211 8570.4277 C
-7794.2871 8565.9922 -7785.4644 8575.1279 -7787.5586 8582.3184 C
f
-7831.2842 8583.9326 m
-7831.8247 8584.3086 -7830.9277 8585.4199 -7831.2529 8585.9082 C
-7833.3237 8585.1563 -7835.6919 8581.0781 -7837.4731 8578.3105 C
-7837.2632 8579.8398 -7838.6641 8581.1641 -7840.0781 8578.9326 C
-7840.2383 8578.1152 -7839.3667 8577.8281 -7839.6729 8576.9365 C
-7840.8306 8575.3682 -7841.8472 8576.8535 -7842.7798 8576.625 C
-7843.3184 8575.8613 -7843.6143 8575.2188 -7843.6816 8574.6943 C
-7837.5537 8571.874 -7830.9263 8583.6768 -7824.7456 8584.1025 C
-7824.9048 8587.1152 -7828.8555 8588.8008 -7831.2842 8583.9326 C
f
u
u
0 XR
-7828.1602 8578.6602 m
-7843.0142 8572.1201 -7864.4731 8576.3418 -7880.3687 8576.3193 c
-7886.2988 8576.3125 -7875.8965 8576.3213 -7881.8267 8576.3262 c
N
0 O
0 g
-7825.8052 8577.4395 m
-7843.1475 8570.2637 -7862.9341 8575.0557 -7881.0532 8574.9863 C
-7881.8608 8575.873 -7882.6685 8576.7617 -7883.4751 8577.6475 C
-7882.6973 8577.6475 -7881.9194 8577.6465 -7881.1421 8577.6533 C
-7880.3345 8576.7656 -7879.5273 8575.8789 -7878.7202 8574.9922 C
-7879.3516 8575.002 -7879.9844 8574.9951 -7880.6157 8574.9951 c
-7882.3735 8574.998 -7886.9165 8577.6621 -7883.0376 8577.6572 c
-7882.4063 8577.6572 -7881.7734 8577.6641 -7881.1421 8577.6533 c
-7879.4155 8577.626 -7874.8184 8575.0234 -7878.7202 8574.9922 c
-7879.4976 8574.9834 -7880.2759 8574.9863 -7881.0532 8574.9863 c
-7882.8081 8574.9854 -7887.3574 8577.6328 -7883.4751 8577.6475 c
-7866.1177 8577.7148 -7847.1025 8573.0137 -7830.5151 8579.8789 c
-7829.1035 8580.4639 -7823.8081 8578.2666 -7825.8052 8577.4395 c
-7825.8052 8577.4395 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7866.9658 8579.4375 m
-7885 8579.4375 L
-7885 8576.5625 L
-7866.9658 8576.5625 L
-7866.9658 8579.4375 L
-7866.9658 8579.4375 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7866.9658 8578.7002 m
-7883.5 8578.7002 L
-7883.5 8577.3008 L
-7866.9658 8577.3008 L
-7866.9658 8578.7002 L
-7866.9658 8578.7002 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7866.9658 8578.3125 m
-7882.5 8578.3125 L
-7882.5 8577.6865 L
-7866.9658 8577.6865 L
-7866.9658 8578.3125 L
-7866.9658 8578.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7867 8579.4375 m
-7885 8579.4375 L
-7885 8576.5625 L
-7867 8576.5625 L
-7867 8579.4375 L
-7867 8579.4375 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7867 8578.7002 m
-7885 8578.7002 L
-7885 8577.3008 L
-7867 8577.3008 L
-7867 8578.7002 L
-7867 8578.7002 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7867 8578.3125 m
-7885 8578.3125 L
-7885 8577.6865 L
-7867 8577.6865 L
-7867 8578.3125 L
-7867 8578.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)
0 A
u
0 J 0 j 1 w 4 M []0 d
0 XR
-7884.8833 8586.9551 m
-7793.0479 8586.9551 L
-7793.0479 8582.6758 L
-7884.8833 8582.6758 L
-7884.8833 8586.9551 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7884.6631 8584.2754 m
-7885 8584.3418 -7884.4814 8584.5313 -7884.8833 8584.3887 C
-7884.8379 8584.2705 -7884.7725 8584.1816 -7884.6631 8584.2754 C
f
-7794.1675 8584.4414 m
-7795.2524 8585.2041 -7796.6816 8584.4336 -7797.8701 8584.9199 C
-7798.0098 8584.9521 -7797.8345 8584.502 -7798.1484 8584.6025 C
-7799.3008 8585.1953 -7801.1162 8584.8418 -7802.5195 8584.3848 C
-7802.4346 8584.2666 L
-7802.7017 8584.1816 -7803.0283 8584.5723 -7803.3115 8584.5176 C
-7803.3135 8584.4395 -7803.2207 8584.4063 -7803.2861 8584.2988 C
-7803.3574 8584.5352 -7803.7983 8584.4082 -7803.9185 8584.584 C
-7804.0303 8584.4922 -7804.0195 8584.3047 -7804.1641 8584.2012 C
-7804.3262 8584.4697 L
-7804.7769 8585.1094 -7805.4209 8584.4258 -7806.0361 8584.7559 C
-7806.0063 8584.6934 -7805.9453 8584.6445 -7805.9941 8584.584 C
-7806.9814 8584.9727 -7808.2168 8584.9004 -7809.3208 8585.043 C
-7809.2769 8584.9482 -7809.2363 8584.7754 -7809.3008 8584.668 C
-7809.3555 8584.9512 -7809.6963 8585.0225 -7809.9922 8585.0781 C
-7810.1255 8584.7871 -7810.4995 8585.3438 -7810.8467 8585.1836 C
-7810.8169 8585.1191 L
-7811.0732 8585.4238 -7811.1973 8584.9434 -7811.4053 8585.3086 C
-7811.5684 8585.0801 L
-7811.6807 8585.4902 -7811.9395 8584.8672 -7812.1514 8585.0762 C
-7812.1445 8585.1602 L
-7812.3442 8585.2598 -7812.4482 8585.0537 -7812.6338 8585.123 C
-7812.6514 8585.0762 L
-7813.0854 8585.1836 -7813.3379 8584.9551 -7813.3271 8585.2754 C
-7813.4795 8585.0186 -7812.9063 8585.1582 -7813.1455 8584.7852 C
-7814.5732 8585.1152 -7816.0459 8585.0508 -7817.4834 8585.0566 C
-7817.6465 8584.9277 -7817.7505 8584.8887 -7817.7871 8584.7676 C
-7817.9307 8584.832 -7818.3281 8584.8262 -7818.4585 8584.9902 C
-7818.4102 8584.9834 -7818.5513 8584.8262 -7818.6274 8584.8105 C
-7818.8887 8584.6895 -7818.9131 8585.1621 -7819.2002 8585.0186 C
-7819.0859 8584.9336 -7819.0469 8584.8301 -7819.0854 8584.7109 C
-7819.3301 8584.9609 -7819.6577 8584.9209 -7819.9473 8585.002 C
-7819.9023 8584.9482 -7819.8325 8584.916 -7819.8433 8584.8154 C
-7820.1602 8585.0986 -7820.4209 8584.7559 -7820.6982 8584.9346 C
-7820.5947 8584.75 L
-7821.0415 8584.5254 -7820.7266 8585.1367 -7821.1128 8585.0039 C
-7821.02 8584.9453 -7821.0527 8584.873 -7821.0361 8584.7979 C
-7821.3965 8585.1338 -7821.9795 8585.0225 -7822.3389 8585.1367 C
-7822.3174 8585.1113 -7822.3232 8585.0605 Y
-7822.7148 8585.1025 -7823.1245 8584.998 -7823.5552 8585.1445 C
-7823.7119 8585.0625 -7823.5039 8584.6934 -7823.9185 8584.7617 C
-7823.9033 8585.1328 -7824.6221 8584.9141 -7824.3779 8585.334 C
-7824.7319 8585.2734 -7825.2925 8585.1338 -7825.5283 8585.2598 C
-7825.3691 8585.1191 -7825.7007 8584.8066 -7825.4063 8584.7754 C
-7825.6289 8584.5498 L
-7825.5957 8584.3984 -7825.3999 8584.6016 -7825.4707 8584.4102 C
-7825.6182 8584.4258 -7826.0479 8584.5723 -7826.1797 8584.5117 C
-7826.4531 8584.7393 -7826.7041 8585.1641 -7827.1465 8585.2109 C
-7826.9385 8585.0664 -7827.2646 8584.8018 -7827.1235 8584.7383 C
-7827.7407 8585.4492 L
-7827.8877 8585.4668 -7827.7725 8585.1563 -7827.9854 8585.2529 C
-7827.9746 8585.3516 -7828.0674 8585.4121 -7828.1318 8585.4922 C
-7828.1875 8585.4492 -7828.7441 8585.584 -7828.8081 8585.2188 C
-7828.8735 8585.0762 -7828.5684 8585.1426 -7828.7314 8585.0117 C
-7829.0029 8585.0156 -7829.0151 8585.1406 -7829.2871 8585.1465 C
-7829.2925 8585.0977 L
-7829.4717 8585.043 -7829.8213 8585.2529 -7829.6265 8585.4551 C
-7829.5015 8585.4668 -7829.6738 8585.2354 -7829.4888 8585.3418 C
-7829.6152 8585.5537 -7829.9312 8585.6133 -7830.2031 8585.6172 C
-7830.1104 8585.5586 -7830.1216 8585.4609 -7830.0845 8585.3574 C
-7830.4497 8585.6445 -7830.8369 8585.7354 -7831.2451 8585.8555 C
-7831.2515 8586.0293 -7831.0928 8585.5391 -7831.0327 8585.6309 C
-7831.5557 8585.3896 -7832.1128 8585.9727 -7832.5479 8585.6201 C
-7832.4766 8585.5898 -7832.5098 8585.8672 -7832.5146 8585.8184 C
-7832.7666 8585.7969 -7832.7549 8585.5449 -7832.9189 8585.6377 C
-7832.9355 8585.4902 -7833.1255 8585.6855 -7833.2944 8585.7305 C
-7833.3818 8585.8369 -7833.3384 8585.6582 -7833.1914 8585.6426 C
-7833.4268 8585.7676 -7834.3691 8585.9941 -7834.9131 8585.7793 C
-7834.9023 8585.877 -7835.2471 8586.1377 -7835.3721 8586.127 C
-7835.3232 8585.8984 L
-7835.4375 8585.7617 -7835.7422 8585.918 -7835.7632 8585.7227 C
-7836.0303 8586 -7834.7344 8585.4863 -7835.0957 8585.7002 C
-7835.1895 8585.5098 -7835.5991 8586.0645 -7835.5215 8585.7529 C
-7835.7725 8585.7617 -7836.0161 8586.0186 -7836.2559 8585.8047 C
-7836.1865 8585.8418 -7836.0522 8585.4873 -7836.2549 8585.5039 C
-7836.6123 8585.5449 -7836.3564 8585.6133 -7836.6465 8585.6895 C
-7836.8281 8585.7832 L
-7836.8398 8586.0059 -7837.1475 8585.7529 -7837.0146 8586.002 C
-7837.0586 8585.8184 -7837.5337 8586.1152 -7837.4971 8585.7461 C
-7837.4473 8585.4551 L
-7837.6016 8585.4766 -7837.7002 8585.7617 -7837.8213 8585.8896 C
-7837.8418 8585.8633 -7837.8823 8585.8047 -7837.8745 8585.7578 C
-7837.8994 8586.2031 -7838.2432 8585.7207 -7838.4268 8586.0645 C
-7838.7505 8585.9102 -7839.2495 8586.0508 -7839.4023 8585.7734 C
-7839.6514 8585.9082 -7839.8784 8586.0684 -7840.1621 8585.9727 C
-7840.1055 8585.9307 -7840.0283 8585.918 -7840.0122 8585.8223 C
-7840.1904 8585.6914 -7840.2344 8585.8086 -7840.3975 8585.8809 C
-7840.3608 8585.8145 -7840.7539 8585.6201 -7840.9521 8585.4629 C
-7841.1992 8585.5957 -7841.1143 8585.8359 -7841.1392 8585.9824 C
-7841.3652 8585.543 -7841.8379 8586.2656 -7842.1211 8585.8672 C
-7842.0352 8585.8066 -7841.7598 8585.6514 -7841.9658 8585.541 C
-7842.1919 8585.1025 -7842.4219 8585.8652 -7842.7861 8585.6543 C
-7842.6968 8586.0186 L
-7842.8594 8585.793 -7843.2334 8586.2305 -7843.1963 8585.8594 C
-7843.3184 8585.9902 -7843.6265 8585.7383 -7843.5859 8586.0938 C
-7844.1846 8585.793 -7845.0425 8586.2754 -7845.4102 8585.6377 C
-7845.4961 8585.6973 -7845.7104 8585.6367 -7845.6665 8585.8193 C
-7845.5239 8586.0176 -7845.4673 8585.6777 -7845.4141 8585.8125 C
-7845.4912 8585.8232 -7845.5078 8585.9209 -7845.5161 8585.9697 C
-7845.7021 8585.8887 -7845.8486 8585.8633 -7845.6729 8585.5674 C
-7846.0869 8585.3477 -7846.1001 8586.1719 -7846.6274 8586.0332 C
-7846.6035 8585.8857 -7846.6436 8585.8301 -7846.7979 8585.8535 C
-7847.0903 8586.1055 L
-7847.4312 8586.0469 -7847.2842 8585.7705 -7847.2925 8585.5215 C
-7847.4746 8585.5645 -7847.6973 8585.5527 -7847.7803 8585.7383 C
-7848.0015 8585.4258 L
-7847.8398 8585.6514 -7848.1514 8585.5762 -7848.2368 8585.6367 C
-7848.1514 8585.5762 L
-7848.1846 8585.4697 -7848.3955 8585.5352 -7848.5024 8585.5664 C
-7848.4766 8585.7207 -7848.2617 8585.7832 -7848.1445 8585.8281 C
-7848.2373 8585.9375 -7848.3823 8585.9121 -7848.5059 8586.041 C
-7848.4648 8585.7969 -7848.8027 8585.8672 -7848.9473 8585.8418 C
-7849.1133 8585.7891 -7849.1348 8586.0605 -7849.1831 8586.0527 C
-7849.1875 8585.9258 -7849.4541 8586.0313 -7849.3247 8585.8535 C
-7849.2681 8585.8125 -7849.1953 8585.9766 -7849.1016 8585.8652 C
-7849.2109 8585.7705 -7849.1982 8585.5498 -7849.4258 8585.7109 C
-7849.5967 8585.832 -7849.3818 8586.1934 -7849.7061 8586.0391 C
-7849.6211 8585.9785 -7849.6055 8585.8809 -7849.5391 8585.793 C
-7849.8433 8585.666 L
-7849.8564 8585.8887 L
-7849.8975 8585.832 -7849.8691 8585.8125 -7849.8877 8585.7832 C
-7849.9785 8586.0176 -7850.3521 8585.8555 -7850.4209 8586.1191 C
-7850.5742 8586.1426 -7850.7441 8585.9648 -7850.8906 8585.9395 C
-7850.8623 8585.9199 L
-7851.0415 8585.7891 -7851.2793 8585.875 -7851.4297 8586.0254 C
-7851.4219 8585.9766 L
-7851.5195 8585.959 -7851.7505 8585.9941 -7851.8735 8586.125 C
-7852.1201 8585.957 -7851.9561 8585.2842 -7852.2295 8585.5645 C
-7852.48 8585.5723 -7852.6221 8585.9727 -7852.5215 8586.1152 C
-7852.9717 8585.9648 -7853.4834 8586.3281 -7853.9009 8585.9824 C
-7853.9658 8586.0723 -7853.9248 8586.1289 -7854.0586 8586.1816 C
-7854.7197 8586.0938 -7855.4551 8586.4453 -7855.9814 8586.0078 C
-7855.79 8585.9141 -7855.9688 8585.7852 -7855.9727 8585.6582 C
-7856.1309 8585.8574 -7856.1631 8585.4512 -7856.2197 8585.793 C
-7856.2041 8585.9941 -7856.2197 8586.0918 -7856.0337 8586.1729 C
-7856.4282 8586.2813 -7857.0283 8586.2813 -7857.2471 8586.0938 C
-7857.1377 8586.1865 -7857.2227 8586.248 -7857.3086 8586.3086 C
-7857.2803 8585.9873 -7857.5713 8585.9395 -7857.7915 8586.0527 C
-7857.8223 8586.248 L
-7857.9658 8586.0469 L
-7858.0503 8586.1094 -7858.0591 8586.457 -7858.2773 8586.2695 C
-7858.2891 8586.1934 -7858.3018 8586.1162 -7858.3418 8586.0605 C
-7858.5693 8586.2207 -7858.8906 8586.4922 -7859.1377 8586.3262 C
-7859.3398 8586.041 L
-7859.4453 8586.0723 -7859.6235 8586.2441 -7859.4375 8586.3262 C
-7859.8594 8586.1543 -7860.1309 8586.1328 -7860.2646 8585.8857 C
-7860.9912 8586.4873 -7862.0459 8586.5117 -7862.8906 8586.4688 C
-7862.8652 8586.3223 L
-7863.0923 8586.1855 -7862.9834 8586.5781 -7863.1416 8586.4766 C
-7863.0684 8586.3369 -7863.3145 8586.1729 -7863.1362 8586.002 C
-7863.4609 8585.8477 -7863.5547 8586.2559 -7863.7656 8586.3223 C
-7863.7979 8586.5146 -7863.5957 8586.1992 -7863.6367 8586.4434 C
-7863.6729 8586.5117 -7864.0859 8586.293 -7864.1362 8586.584 C
-7864.2178 8586.4697 -7864.1543 8586.2559 -7864.1104 8586.1377 C
-7864.3086 8586.2793 L
-7864.5513 8585.9395 -7863.7559 8585.6719 -7864.0107 8585.2529 C
-7864.1934 8585.2988 L
-7864.3682 8584.9941 -7863.71 8584.9551 -7864.1689 8584.8506 C
-7864.3682 8584.9941 -7864.5381 8585.416 -7864.3608 8585.5449 C
-7864.7754 8585.625 -7864.5527 8586.2383 -7864.9985 8586.2139 C
-7865.1201 8586.043 -7864.6416 8586.1729 -7864.7275 8585.9336 C
-7864.9375 8585.6992 -7865.1484 8586.0645 -7865.3354 8585.9824 C
-7865.1279 8586.0918 -7865.3032 8586.3857 -7865.4375 8586.4395 C
-7865.6641 8586.3018 -7865.29 8586.1641 -7865.6113 8586.1338 C
-7865.6641 8586.3018 -7865.9595 8586.4277 -7865.7041 8586.5449 C
-7865.8203 8586.9258 -7866.0381 8586.4395 -7866.2129 8586.7344 C
-7866.3174 8586.4668 -7865.8823 8586.1152 -7866.2354 8585.9814 C
-7866.1792 8586.2393 -7866.6704 8586.332 -7866.4839 8586.7148 C
-7866.6221 8586.6406 -7866.6367 8586.4375 -7866.5361 8586.2793 C
-7866.7334 8586.1201 -7867.0151 8586.75 -7867.0801 8586.2383 C
-7867.1479 8586.502 L
-7867.21 8586.416 -7867.2983 8586.3516 -7867.3994 8586.209 C
-7867.5732 8586.2041 -7867.96 8586.5664 -7867.9443 8586.168 C
-7868 8586.209 -7868.3975 8586.1914 -7868.2441 8586.4668 C
-7867.9971 8586.6348 -7867.96 8586.2656 -7867.8223 8586.6377 C
-7867.9971 8586.334 -7868.1787 8586.6777 -7868.3213 8586.7793 C
-7868.3447 8586.625 L
-7868.4297 8586.6855 -7868.6255 8586.6514 -7868.6787 8586.8184 C
-7868.6133 8586.7305 -7868.6475 8586.625 -7868.7148 8586.5879 C
-7868.8042 8586.8223 L
-7869.1494 8586.9395 -7868.8857 8586.4102 -7869.2217 8586.4785 C
-7868.9663 8586.2969 L
-7869.0225 8586.3359 -7869.1367 8586.1162 -7869.2979 8586.1895 C
-7869.3604 8586.4033 -7869.4775 8586.6602 -7869.5313 8586.8262 C
-7869.7207 8586.9199 -7869.6162 8586.585 -7869.8027 8586.8047 C
-7869.5586 8586.5469 L
-7869.5215 8586.4766 -7869.7231 8586.1934 -7869.9761 8586.1992 C
-7870.1377 8586.2734 -7870.3887 8586.582 -7870.1338 8586.6992 C
-7870.2607 8586.7031 -7870.4385 8586.5723 -7870.3379 8586.416 C
-7870.6255 8586.4902 -7870.2998 8586.6465 -7870.5479 8586.7793 C
-7870.6494 8586.6367 -7870.9658 8586.4336 -7871.1563 8586.2266 C
-7870.8975 8585.8682 L
-7871.0693 8585.8652 L
-7870.8467 8585.5781 -7871.1826 8585.6465 -7871.0566 8585.3438 C
-7871.1743 8585.2969 -7871.3169 8585.3994 -7871.4307 8585.4785 C
-7871.0864 8585.9629 -7871.8159 8586.1406 -7871.7158 8586.582 C
-7872.1875 8586.7031 -7872.0107 8585.5078 -7872.5024 8586.1992 C
-7872.4219 8586.3145 -7872.6533 8586.6504 -7872.3564 8586.5225 C
-7872.6494 8586.4746 -7872.5557 8586.9658 -7872.9014 8586.7832 C
-7872.6455 8586.6016 -7873.1763 8586.3359 -7872.8066 8586.0723 C
-7872.8311 8586.2188 -7872.6001 8586.1836 -7872.5435 8586.1426 C
-7872.6641 8585.9727 -7872.5186 8585.6973 -7872.8184 8585.6973 C
-7873.0015 8585.7393 -7873.2524 8585.748 -7873.2158 8585.9785 C
-7873.2085 8586.2314 -7872.9365 8585.9512 -7873.0537 8586.207 C
-7873.4185 8586.2949 -7873.4795 8585.9102 -7873.6304 8586.3594 C
-7873.3999 8586.3232 -7873.3423 8586.584 -7873.3467 8586.7578 C
-7873.6143 8586.8633 L
-7873.5625 8586.6953 L
-7873.9922 8586.5742 -7873.6895 8587 -7874.1055 8586.9551 C
-7874.3008 8586.623 L
-7874.2017 8586.3369 -7873.6953 8586.75 -7873.7695 8586.2842 C
-7874.04 8586.2656 -7874.1299 8586.502 -7874.3848 8586.3818 C
-7874.3281 8586.3418 -7874.2505 8586.3301 -7874.1943 8586.2891 C
-7874.2915 8586.2734 -7874.3877 8585.6563 -7874.7734 8586.0176 C
-7874.9727 8586.1582 -7874.8262 8586.1836 -7874.8311 8586.3574 C
-7875.2656 8586.4102 -7875.3955 8586.5879 -7875.6753 8586.6152 C
-7875.6177 8586.2754 -7876.1699 8586.582 -7875.8608 8586.2344 C
-7875.7188 8586.4336 -7875.0903 8586.4141 -7874.9365 8586.0898 C
-7875.0947 8585.6865 -7874.5952 8586.1465 -7874.5024 8585.7383 C
-7874.8506 8585.7285 -7874.8335 8585.332 -7874.8896 8585.0723 C
-7874.9863 8585.0537 -7875.0801 8585.1641 -7875.1377 8585.2041 C
-7875.1787 8585.4492 -7875.0522 8585.4453 -7875.0449 8585.6973 C
-7875.4336 8585.6309 -7875.8081 8585.7676 -7876.0225 8586.0059 C
-7876.1523 8585.8848 -7876.1113 8585.6406 -7875.9575 8585.6172 C
-7876.4199 8585.6895 -7876.9141 8585.6563 -7877.3535 8585.582 C
-7877.0693 8585.9814 -7877.8433 8585.6758 -7877.6494 8586.0078 C
-7877.4141 8586.0977 -7877.2119 8586.3818 -7877.3418 8586.5605 C
-7877.4888 8586.5352 -7877.3369 8586.3857 -7877.3984 8586.3008 C
-7877.5859 8586.5186 -7877.6895 8585.9512 -7877.8735 8586.2949 C
-7877.4512 8586.166 -7877.7915 8585.8086 -7877.7139 8585.4961 C
-7878.0186 8585.6719 -7877.7007 8585.2734 -7878.0024 8585.2734 C
-7878.3057 8585.4473 -7878.6787 8585.584 -7879.0161 8585.6514 C
-7879.4399 8585.3555 -7880.0898 8585.6465 -7880.4683 8585.6582 C
-7880.6665 8585.5 -7880.5322 8585.1465 -7880.7471 8585.085 C
-7880.9995 8585.0918 -7880.5601 8585.4668 -7880.9336 8585.3047 C
-7880.8975 8585.2344 L
-7881.0107 8585.3164 -7881.5825 8584.9941 -7881.6929 8585.502 C
-7881.5776 8585.1191 L
-7881.6475 8585.084 -7881.7119 8585.1719 -7881.7695 8585.2129 C
-7881.7725 8585.0879 -7881.8535 8584.9746 -7881.7402 8584.8926 C
-7881.9707 8584.6289 -7882.2241 8584.9346 -7882.4746 8584.9453 C
-7882.3135 8585.1719 L
-7882.7422 8585.3496 -7883.0293 8585.125 -7883.4443 8585.2041 C
-7883.4316 8584.9824 L
-7883.6787 8585.1152 L
-7883.6182 8584.9004 -7883.8447 8584.7617 -7883.9751 8584.9414 C
-7883.3335 8584.3984 L
-7883.1553 8584.5293 -7883.5283 8584.666 -7883.4165 8584.8848 C
-7883.3213 8585.0762 -7882.9375 8585.0156 -7882.8755 8584.8018 C
-7883.0225 8584.7773 -7883.0293 8584.8262 -7883.1436 8584.9063 C
-7883.1919 8584.5977 -7882.9688 8584.6094 -7882.8584 8584.4033 C
-7882.9355 8584.416 -7883.0449 8584.3223 -7883.0615 8584.4199 C
-7882.9102 8584.2695 -7882.7578 8584.2461 -7882.5059 8584.2383 C
-7882.6763 8584.3594 -7882.4131 8584.4297 -7882.4775 8584.5176 C
-7882.4575 8584.2461 -7882.2168 8584.1621 -7881.9053 8584.2383 C
-7881.6831 8584.5527 -7881.3208 8584.0361 -7880.96 8584.123 C
-7881.1064 8584.3984 -7881.2935 8584.6191 -7881.5127 8584.7305 C
-7881.2861 8584.8682 -7881.2607 8584.7227 -7881.0337 8584.8613 C
-7880.9238 8584.6563 -7880.8457 8584.3418 -7880.5503 8584.2168 C
-7880.5342 8584.4199 L
-7880.2666 8584.3164 -7880.2666 8584.0156 -7879.9258 8584.0723 C
-7879.3418 8584.1719 -7878.7407 8584.1719 -7878.2949 8584.1973 C
-7878.2783 8584.3994 L
-7878.0303 8583.9658 -7877.4521 8584.2393 -7877.1182 8584.0469 C
-7876.5503 8584.2422 -7875.8848 8583.8535 -7875.5938 8584.2031 C
-7874.5913 8584.0469 -7873.7148 8583.8945 -7872.6768 8583.9688 C
-7872.8516 8584.2637 L
-7872.6655 8584.0469 -7872.7305 8584.4336 -7872.5479 8584.3896 C
-7872.7578 8584.1543 -7872.2949 8584.084 -7872.1665 8583.9033 C
-7871.7041 8584.1328 -7871.1104 8583.8828 -7870.7007 8583.6758 C
-7870.6846 8583.8789 L
-7870.2705 8583.498 -7869.7759 8583.832 -7869.2598 8583.8945 C
-7869.2007 8583.9785 -7869.1074 8584.1689 -7868.9536 8584.1465 C
-7868.6738 8583.8184 -7868.5273 8583.8418 -7868.1167 8583.6367 C
-7867.8169 8583.6367 -7867.3301 8583.7178 -7867.0254 8583.8457 C
-7865.8975 8583.3848 -7864.7456 8583.6797 -7863.5732 8583.4023 C
-7863.4888 8583.6406 L
-7862.3521 8583.1309 -7860.9541 8583.5938 -7859.9839 8583.332 C
-7860.0776 8583.7393 L
-7859.7734 8583.8652 -7859.3843 8583.6328 -7859.4619 8583.3438 C
-7859.1567 8583.4688 -7858.7007 8583.1465 -7858.5068 8583.4814 C
-7858.1953 8583.5566 -7858.1255 8583.293 -7857.8662 8583.2383 C
-7857.2422 8583.3926 -7857.0107 8583.3574 -7856.4224 8583.2813 C
-7856.5684 8583.2559 L
-7856.6328 8583.3457 -7856.6387 8583.5186 -7856.4922 8583.5449 C
-7856.2725 8583.4316 -7855.6846 8583.6543 -7855.9033 8583.168 C
-7855.2754 8583.4492 -7854.4385 8582.9395 -7853.8271 8583.3184 C
-7853.8789 8583.1855 -7853.7246 8583.1602 -7853.6602 8583.0703 C
-7853.1089 8583.0645 -7852.5293 8583.3359 -7852.0898 8583.1094 C
-7852.0024 8583.1758 -7852.2295 8583.3359 -7852.0049 8583.3496 C
-7851.8721 8583.2988 -7852.0024 8583.1758 -7851.8384 8583.1016 C
-7850.9453 8582.8535 -7850.0303 8583.3574 -7849.2188 8583.293 C
-7847.7754 8583.0361 -7846.2695 8583.166 -7844.8867 8583.123 C
-7844.9023 8583.2207 L
-7844.4395 8582.8477 -7843.8159 8583.6025 -7843.4463 8583.041 C
-7843.3369 8583.1338 -7843.0283 8583.085 -7843.1094 8583.2734 C
-7842.7407 8583.0098 -7842.0771 8583.5215 -7841.5439 8583.1865 C
-7841.5928 8583.1777 -7841.6211 8583.1973 -7841.6777 8583.2393 C
-7841.1392 8583.4551 -7840.6641 8583.1602 -7840.0957 8583.3555 C
-7840.1533 8583.3975 -7840.2583 8583.4277 -7840.2754 8583.5254 C
-7840.0557 8583.7129 -7839.7549 8583.1133 -7839.6348 8583.584 C
-7839.5088 8583.5801 -7839.5449 8583.3477 -7839.6221 8583.3613 C
-7838.3779 8583.5449 -7837.0498 8583.2441 -7835.7549 8583.1367 C
-7834.8271 8583.418 -7835.6982 8583.9297 -7834.9663 8583.5781 C
-7834.9063 8583.6689 -7834.9229 8583.3984 -7834.9131 8583.4961 C
-7834.6299 8583.3643 -7834.4717 8584.0215 -7834.2754 8583.7754 C
-7834.3564 8583.4863 -7834.1445 8583.6133 -7834.1387 8583.4375 C
-7833.5713 8583.625 -7833.4575 8583.8857 -7833.0098 8583.666 C
-7833.0435 8583.8184 L
-7832.5186 8583.3887 -7831.9102 8583.6191 -7831.4673 8583.123 C
-7828.5728 8583.0332 -7825.7983 8582.7578 -7822.9761 8582.7002 C
-7820.1865 8582.7949 -7817.4551 8582.5723 -7814.6221 8582.8359 C
-7813.9585 8583.2354 -7813.9087 8583.2246 -7813.1797 8583.0625 C
-7813.2095 8583.127 -7813.2549 8583.1426 -7813.2061 8583.2031 C
-7813.1699 8582.875 -7812.6929 8583.1719 -7812.6235 8582.8594 C
-7811.5762 8582.9199 -7810.6113 8582.8301 -7809.5337 8582.8281 C
-7809.7041 8582.8633 -7809.7896 8583.1309 -7809.5869 8583.1094 C
-7809.3755 8582.9004 L
-7809.3408 8582.9922 L
-7809.2021 8582.9434 -7809.0513 8582.7813 -7809.1943 8582.6758 C
-7806.4873 8582.3926 -7803.8242 8583.0508 -7801.1729 8582.9697 C
-7800.5435 8583.1064 -7799.6475 8582.9814 -7798.9629 8582.9141 C
-7796.9355 8583.3516 -7795.1079 8583.7041 -7793.0479 8583.3984 C
-7793.3169 8584.2461 -7794.1675 8584.4414 V
f
-7884.2578 8584.2422 m
-7884.1855 8584.4063 -7883.9497 8584.4961 -7884.1377 8584.7148 C
-7884.1611 8584.5605 -7884.2822 8584.3887 -7884.2578 8584.2422 C
f
-7877.9619 8585.9297 m
-7877.9536 8585.8809 -7877.8721 8585.9961 -7877.8521 8586.0225 C
-7877.9297 8586.0352 -7878.0024 8586.1729 -7878.0645 8586.0879 C
-7877.9854 8586.0762 -7877.9976 8585.998 -7877.9619 8585.9297 C
f
-7876.3521 8586.0273 m
-7876.3765 8586.1729 -7876.7207 8586.2891 -7876.9238 8586.3066 C
-7876.3521 8586.0273 L
f
-7874.8521 8586.6289 m
-7874.7227 8586.752 -7874.7583 8586.8193 -7874.9326 8586.8154 C
-7874.9453 8586.7383 -7874.8877 8586.6992 -7874.8521 8586.6289 C
f
-7874.7456 8586.2969 m
-7874.6211 8586.293 -7874.5591 8586.3789 -7874.4985 8586.4629 C
-7874.5029 8586.3369 -7874.7871 8586.541 -7874.7456 8586.2969 C
f
-7871.4893 8586.7207 m
-7871.4111 8586.709 -7871.2417 8586.5879 -7871.1689 8586.75 C
-7871.2505 8586.6367 -7871.5498 8586.9346 -7871.4893 8586.7207 C
f
-7869.9761 8586.5 m
-7869.9272 8586.5098 -7869.9072 8586.5361 -7869.8506 8586.4961 C
-7869.7607 8586.5625 -7869.8555 8586.6689 -7869.9312 8586.6826 C
-7869.9761 8586.5 L
f
-7842.4287 8585.9141 m
-7842.5923 8585.9863 L
-7842.5684 8585.8418 L
-7842.4287 8585.9141 L
f
-7830.3574 8585.9063 m
-7830.1943 8585.8145 -7830.2441 8586.043 -7830.2168 8586.0645 C
-7830.3643 8586.0801 -7830.1621 8585.8848 -7830.3574 8585.9063 C
f
-7823.8486 8585.1777 m
-7823.8984 8585.1816 L
-7823.8818 8584.8828 L
-7823.8486 8585.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7874.5625 8587 m
-7877.4375 8587 L
-7877.4375 8578.5 L
-7877.4375 8577.4316 -7876.5684 8576.5625 -7875.5 8576.5625 C
-7866.9165 8576.5625 L
-7866.9165 8579.4375 L
-7874.5625 8579.4375 L
-7874.5625 8587 L
-7874.5625 8587 L
f
U
u
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7875.2998 8587 m
-7876.7002 8587 L
-7876.7002 8578.5 L
-7876.7002 8577.8389 -7876.1621 8577.3008 -7875.5 8577.3008 C
-7866.9165 8577.3008 L
-7866.9165 8578.7002 L
-7875.2998 8578.7002 L
-7875.2998 8587 L
-7875.2998 8587 L
f
U
u
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7875.6875 8587 m
-7876.3125 8587 L
-7876.3125 8578.5 L
-7876.3125 8578.0527 -7875.9482 8577.6865 -7875.5 8577.6865 C
-7866.9165 8577.6865 L
-7866.9165 8578.3125 L
-7875.5 8578.3125 L
-7875.6035 8578.3125 -7875.6875 8578.3975 -7875.6875 8578.5 C
-7875.6875 8587 L
-7875.6875 8587 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7858.9727 8587 m
-7858.9727 8560.9717 L
-7885 8560.9717 L
-7885 8587 L
-7858.9727 8587 L
n
0 Ap
0 R
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
1.125 w
-7885 8569.6465 m
-7858.9727 8569.6465 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
-7885 8578.3242 m
-7858.9727 8578.3242 l
S
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w
-7885 8573.9854 m
-7858.9727 8573.9854 l
S
0 O
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 Xa
1 w
-7863.5742 8574.0117 m
-7863.3442 8573.7402 -7863.6914 8573.4541 -7864 8573.2432 c
-7864.1118 8573.166 -7864.5215 8573.3789 -7864.7466 8573.2129 c
-7865.0439 8572.9951 -7865.1826 8572.9082 -7865.4824 8572.9141 c
-7865.6455 8572.918 -7866.0435 8573.0479 -7866.1895 8573.0781 c
-7866.5679 8573.1543 -7866.8022 8573.3516 -7867.3672 8573.2549 c
-7867.7344 8573.1914 -7867.8286 8573.1006 -7867.9233 8573.1484 c
-7868.1118 8573.29 -7868.2202 8573.5137 -7868.4258 8573.5625 c
-7868.9575 8573.6895 -7869.3535 8573.7334 -7869.8818 8573.7227 c
-7870.3047 8573.7129 -7871.4185 8573.7813 -7872.2866 8573.6816 c
-7872.6226 8573.6416 -7872.6025 8573.2168 -7872.7695 8573.2129 c
-7872.8618 8573.2109 -7872.7646 8573.5264 -7872.8306 8573.5469 c
-7873.1694 8573.6533 -7873.4702 8572.5029 -7873.6943 8572.5723 c
-7873.8047 8572.6074 -7873.5562 8573.1533 -7873.6729 8573.1816 c
-7873.8975 8573.2373 -7874.2178 8572.2188 -7874.4321 8572.2813 c
-7874.5635 8572.3184 -7874.2886 8572.7383 -7874.4375 8572.8066 c
-7874.6655 8572.9111 -7874.9087 8572.0352 -7875.1064 8572.1338 C
-7875.1543 8572.1816 -7874.7295 8572.9375 -7875.1685 8572.8789 c
-7875.2871 8572.8613 -7875.5054 8572.3135 -7875.5801 8572.3398 c
-7875.6919 8572.3799 -7875.3535 8572.8018 -7875.4897 8572.9277 C
-7875.7681 8573.1543 -7876.3711 8572.1631 -7876.4575 8572.2344 c
-7876.5791 8572.3359 -7876.1279 8573.0977 -7876.2695 8573.166 C
-7876.4497 8573.4297 -7877.0142 8572.5527 -7877.0889 8572.6016 c
-7877.1777 8572.6602 -7876.9058 8573.0381 -7876.8799 8573.2334 c
-7876.8545 8573.4277 -7876.9966 8573.5615 -7877.2144 8573.5098 c
-7877.4736 8573.4473 -7877.8696 8572.6416 -7877.9727 8572.7354 C
-7878.0791 8572.791 -7877.8682 8573.0781 -7877.7954 8573.3125 c
-7877.7583 8573.4277 -7877.8882 8573.6016 -7878.0298 8573.6016 c
-7878.3135 8573.6494 -7878.6255 8572.998 -7878.7065 8573.1025 c
-7878.7524 8573.1621 -7878.5898 8573.4902 -7878.7295 8573.5879 c
-7878.8994 8573.7061 -7879.3115 8573.2383 -7879.4521 8573.293 C
-7879.5361 8573.3418 -7879.4126 8573.5967 -7879.4927 8573.6533 c
-7879.7295 8573.8193 -7880.0039 8573.4209 -7880.0513 8573.4688 C
-7880.1167 8573.4912 -7880.1201 8573.5361 -7880.2793 8573.6406 c
-7880.4736 8573.7676 -7880.5254 8573.8486 -7880.5425 8573.9648 c
-7880.5654 8574.083 -7880.3135 8574.375 -7880.1655 8574.3496 c
-7879.8223 8574.29 -7879.8662 8574.8496 -7879.6328 8574.7158 c
-7879.5679 8574.6797 -7879.6592 8574.2588 -7879.4199 8574.2656 c
-7879.0488 8574.2783 -7878.9858 8574.8213 -7878.7817 8574.8105 c
-7878.6406 8574.8037 -7878.8521 8574.1836 -7878.6328 8574.2607 c
-7878.4751 8574.3164 -7878.0063 8575.3018 -7877.9795 8575.21 c
-7877.8975 8574.9424 -7878.0703 8574.3984 -7877.9409 8574.4082 c
-7877.7568 8574.4229 -7877.5078 8575.3174 -7877.2544 8575.4375 c
-7877.1826 8575.4727 -7877.3774 8574.6006 -7877.1958 8574.5967 C
-7877.0898 8574.6465 -7876.7578 8575.4492 -7876.6274 8575.498 C
-7876.5591 8575.4824 -7876.5879 8575.125 -7876.5176 8575.1045 c
-7876.4688 8575.0898 -7876.2817 8575.5654 -7876.21 8575.5234 c
-7876.1055 8575.4629 -7876.2471 8574.9922 -7876.0889 8574.9229 c
-7875.9175 8574.8486 -7875.4878 8575.8926 -7875.3486 8575.7979 c
-7875.2769 8575.75 -7875.3574 8575.21 -7875.21 8575.2461 c
-7875.0718 8575.2783 -7874.9414 8575.6143 -7874.8081 8575.6426 c
-7874.7295 8575.6582 -7874.7935 8575.1914 -7874.7495 8575.1738 c
-7874.5889 8575.1152 -7874.2329 8575.6719 -7874.0688 8575.5234 c
-7873.8584 8575.335 -7873.9395 8574.9697 -7873.8345 8574.9824 c
-7873.6274 8575.0059 -7873.4912 8575.2432 -7873.4146 8575.1836 c
-7873.2642 8575.0684 -7873.3281 8574.7793 -7873.0527 8574.6924 c
-7872.8975 8574.6426 -7872.7935 8574.9346 -7872.7495 8574.9307 c
-7872.6738 8574.9277 -7872.6782 8574.8301 -7872.6665 8574.7246 c
-7872.6328 8574.4609 -7872.6064 8574.3994 -7872.4878 8574.377 c
-7872.0854 8574.3535 -7871.5625 8574.2842 -7871.1807 8574.2754 c
-7870.6274 8574.2607 -7869.2607 8574.2373 -7869.1182 8574.2373 c
-7869 8574.2129 -7868.7432 8574.3945 -7868.6689 8574.4609 c
-7868.4678 8574.6455 -7868.2998 8574.8594 -7867.9858 8575.1201 c
-7867.8906 8575.2012 -7867.8081 8575.1807 -7867.7378 8575.1563 c
-7867.5249 8575.085 -7867.4585 8575.0332 -7867.2202 8575.002 c
-7866.9175 8574.959 -7866.4272 8575.0488 -7866.1245 8575.1426 c
-7865.6035 8575.3018 -7865.5264 8575.3242 -7865.0977 8575.2754 c
-7864.6992 8575.2295 -7864.0586 8575.1582 -7864.0479 8574.8105 c
-7864.0415 8574.5957 -7863.9414 8574.4434 -7863.5742 8574.0117 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7858.9722 8587 m
-7858.9722 8560.9727 L
-7885 8560.9727 L
-7885 8587 L
-7858.9722 8587 L
n
0 Ap
0 R
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w
-7867.6455 8573.9893 m
-7858.9736 8573.9893 l
S
-7871.9839 8587 m
-7871.9839 8578.3242 l
S
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
1.125 w
-7867.7202 8569.6504 m
-7858.9727 8569.6504 l
S
-7876.3232 8586.999 m
-7876.3232 8577.6455 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
-7867.6504 8586.999 m
-7867.6504 8584.5869 l
-7864.9937 8584.3633 -7863.3096 8582.6602 v
-7861.6064 8580.9336 -7861.3774 8578.3281 y
-7858.9727 8578.3281 l
S
*u
1 D
0 O
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa
1 w
-7875.8418 8571.1855 m
-7875.8418 8571.25 -7875.8218 8571.291 -7875.7783 8571.291 c
-7875.6943 8571.291 -7875.4634 8570.9541 -7875.3994 8570.9541 c
-7875.3154 8570.9541 -7875.2729 8570.9961 -7875.2729 8571.1016 c
-7875.2729 8571.1855 -7875.5264 8572.0928 y
-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5049 8572.1338 c
-7875.4414 8572.1338 -7875.0615 8571.5869 -7874.9351 8571.5869 c
-7874.9146 8571.5869 -7874.8936 8571.6074 -7874.8936 8571.6289 c
-7875.1675 8572.5352 -7875.1675 8572.7256 v
-7875.1675 8572.7891 -7875.1675 8572.8105 -7875.1465 8572.8105 c
-7875.1055 8572.8105 -7874.6826 8572.2402 -7874.5562 8572.2402 c
-7874.5352 8572.2402 -7874.5137 8572.2607 -7874.5137 8572.2822 c
-7874.5137 8572.3457 -7874.7666 8573.084 -7874.7666 8573.252 c
-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7446 8573.2949 c
-7874.6826 8573.2949 -7874.4722 8573.084 -7874.4297 8573.084 c
-7874.4082 8573.084 -7874.3882 8573.1055 -7874.3882 8573.126 c
-7874.3882 8573.1465 -7874.4927 8573.5059 -7874.4927 8573.5898 c
-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4722 8573.6113 c
-7874.4297 8573.6113 -7874.0918 8573.252 -7874.0078 8573.252 c
-7873.9658 8573.252 -7873.9233 8573.2949 -7873.9233 8573.3789 c
-7873.9233 8573.5273 -7874.1138 8574.2441 -7874.1138 8574.2861 c
-7874.1138 8574.3701 -7874.0918 8574.4121 -7874.0498 8574.4121 c
-7873.9658 8574.4121 -7873.7119 8574.0957 -7873.6494 8574.0957 c
-7873.5854 8574.0957 -7873.5439 8574.1162 -7873.5439 8574.1807 c
-7873.5854 8574.6016 L
-7873.5854 8574.666 -7873.5854 8574.6855 -7873.5654 8574.6855 c
-7873.5225 8574.6855 -7873.2915 8574.3916 -7873.2065 8574.3916 c
-7873.1006 8574.3916 -7873.1006 8574.877 -7873.1006 8574.9395 c
-7873.1006 8575.0449 -7873.0166 8575.1289 -7872.8896 8575.1289 c
-7872.8057 8575.1289 -7872.4678 8574.8975 -7872.4473 8574.8975 c
-7872.3623 8574.8975 -7872.3198 8575.3398 -7872.2568 8575.3398 c
-7872.1943 8575.3398 -7871.9199 8575.2129 -7871.8564 8575.2129 c
-7871.6455 8575.2129 -7871.6035 8575.2988 -7871.6035 8575.4668 c
-7871.6255 8575.6143 L
-7871.6255 8575.6563 -7871.6035 8575.6563 -7871.5835 8575.6563 c
-7871.4985 8575.6563 -7871.2241 8575.3818 -7871.1392 8575.3818 c
-7870.9287 8575.3818 -7868.8198 8577.4492 -7868.5454 8577.7227 c
-7868.3984 8577.8906 -7868.3984 8578.1865 -7868.3984 8578.3135 c
-7868.3984 8579.1777 -7868.3984 8579.2617 -7868.2295 8579.3457 c
-7867.5977 8579.5996 -7867.5127 8579.7471 -7866.7334 8581.0332 c
-7866.6479 8581.1807 -7865.7407 8581.793 -7865.5942 8581.793 c
-7865.4878 8581.793 -7865.1094 8581.5391 -7865.0239 8581.5391 c
-7864.9194 8581.5391 -7864.8135 8581.6025 -7864.8135 8581.7705 c
-7864.8135 8582.2139 -7865.3408 8582.7207 -7865.9312 8582.7207 c
-7866.7534 8582.7207 -7867.0913 8582.0234 -7867.1338 8581.625 c
-7867.1543 8581.4766 -7867.2393 8581.3916 -7867.3447 8581.3916 c
-7867.3862 8581.3916 -7867.4287 8581.4121 -7867.4702 8581.4766 c
-7867.9561 8582.2773 -7868.9473 8582.7207 -7869.7065 8582.7207 c
-7870.7393 8582.7207 -7871.8774 8582.0879 -7872.3418 8581.8145 c
-7872.7842 8581.5615 -7873.4814 8581.3916 -7873.8809 8581.3916 c
-7874.3242 8581.3916 -7874.3662 8581.5391 -7874.3662 8581.793 c
-7874.3662 8581.9404 -7873.9023 8582.3818 -7873.9023 8582.5098 c
-7873.9023 8582.6357 -7874.0498 8582.7207 -7874.4082 8582.7207 c
-7874.8936 8582.7207 -7875.5679 8582.0029 -7875.5679 8581.2236 c
-7875.5679 8580.6113 -7874.7666 8580.085 -7874.3022 8580.085 c
-7873.3755 8580.085 -7873.0942 8580.4434 -7872.5264 8580.9072 c
-7872.4414 8580.9697 -7872.3774 8580.9922 -7872.3359 8580.9922 c
-7872.1895 8580.9922 -7872.1895 8579.8945 -7872.1895 8579.7695 c
-7872.1895 8579.6201 -7872.2729 8579.5576 -7872.3774 8579.5576 c
-7874.7822 8579.5576 -7879.6592 8578.334 -7881.3672 8572.1777 c
-7881.4297 8571.9658 -7881.5361 8571.8613 -7881.6406 8571.8613 c
-7881.7881 8571.8613 -7882.7793 8572.7041 -7882.7793 8574.2861 c
-7882.7793 8576.1201 -7881.5767 8577.0898 -7880.9873 8577.0898 c
-7880.8398 8577.0898 -7880.6494 8577.0693 -7880.6494 8576.9209 c
-7880.6494 8576.8584 -7880.6929 8576.7949 -7880.7759 8576.6895 c
-7881.1143 8576.3535 -7881.3672 8575.7197 -7881.3672 8575.4033 c
-7881.3672 8575.1914 -7881.2607 8575.0234 -7881.1143 8575.0234 c
-7880.9033 8575.0234 -7880.5654 8575.9727 -7880.46 8576.1201 c
-7880.3335 8576.3311 -7879.9546 8576.7109 -7879.2378 8577.2383 c
-7878.4995 8577.7637 -7877.0654 8579.0723 -7877.0654 8580.3369 c
-7877.0654 8581.709 -7878.1191 8582.6152 -7878.9209 8582.6152 c
-7879.7007 8582.6152 -7880.6714 8582.0879 -7881.0713 8581.6025 c
-7881.7041 8580.8652 -7882.3154 8580.2949 -7882.8218 8580.2949 c
-7883.1592 8580.2949 -7883.3066 8580.5059 -7883.3066 8580.7168 c
-7883.3066 8581.0537 -7883.0537 8581.2861 -7882.5479 8581.3281 c
-7881.9575 8581.3711 -7881.8936 8581.793 -7881.8936 8582.1289 c
-7881.8936 8582.4033 -7882.4209 8582.7207 -7882.8433 8582.7207 c
-7883.4751 8582.7207 -7884.2974 8582.0234 -7884.2974 8580.1904 c
-7884.2974 8578.6924 -7883.0537 8578.2295 -7882.5679 8578.2295 c
-7882.1265 8578.2295 -7881.4722 8578.3135 -7881.0928 8578.6504 c
-7879.8066 8579.8535 -7879.1318 8580.0625 -7878.5835 8580.0625 c
-7878.3721 8580.0625 -7878.2881 8580.0625 -7878.2881 8580.2109 c
-7878.2881 8580.5273 -7879.0474 8580.7168 -7879.1318 8580.7383 c
-7879.3423 8580.8008 -7879.5103 8581.0332 -7879.5103 8581.2441 c
-7879.5103 8581.7295 -7879.2378 8581.75 -7878.8774 8581.75 c
-7878.5215 8581.75 -7877.8042 8581.3916 -7877.8042 8580.1904 c
-7877.8042 8579.1992 -7878.9424 8578.0391 -7879.4058 8577.8076 c
-7879.7007 8577.6377 -7880.5874 8577.6602 -7880.9458 8577.6172 c
-7881.6406 8577.5322 -7883.4121 8576.585 -7883.4121 8574.0957 c
-7883.4336 8572.6826 -7882.1265 8571.3555 -7881.8511 8571.166 c
-7881.6826 8571.0586 -7881.5986 8570.9326 -7881.5986 8570.7637 c
-7881.5986 8570.5527 -7881.6626 8567.6221 -7881.9995 8567.6221 c
-7882.4424 8567.6221 -7882.5054 8567.6221 -7882.5054 8567.8135 c
-7882.21 8568.9082 -7882.21 8569.1406 v
-7882.21 8569.457 -7882.4424 8570.9326 -7883.3066 8570.9326 c
-7883.5806 8570.9326 -7884.0449 8570.7002 -7884.0449 8570.3848 c
-7884.0449 8570.0898 -7883.3486 8568.8877 -7883.3486 8568.6133 c
-7883.3486 8568.1279 -7883.3921 8568.1074 -7884.0654 8567.4961 c
-7884.2559 8567.3486 -7884.3193 8567.2227 -7884.3193 8567.0313 c
-7884.3193 8566.8633 -7884.2134 8566.7354 -7884.0449 8566.7354 c
-7883.8975 8566.7354 -7883.3281 8567.0117 -7883.2017 8567.0313 c
-7883.0752 8567.0313 -7882.8433 8567.0527 -7882.6538 8567.0527 c
-7882.2734 8567.0527 -7882.0845 8566.9258 -7882.0845 8566.7998 c
-7882.0845 8566.5674 -7882.0845 8565.8936 -7882.9263 8564.4375 c
-7883.1167 8564.1006 -7884.2974 8562.7725 -7884.2974 8562.4346 c
-7884.2974 8562.2656 -7884.2134 8562.2461 -7884.1089 8562.2461 c
-7883.9185 8562.2461 -7883.4966 8562.667 -7883.3706 8562.8145 c
-7882.1265 8564.1426 -7881.3042 8565.5762 -7880.9238 8566.8418 c
-7880.8398 8567.1582 -7880.7344 8567.0742 -7880.5654 8567.0957 c
-7878.4155 8567.6016 -7876.3271 8570.1104 -7876.3271 8570.1318 c
-7876.4326 8570.4053 -7876.4326 8570.4688 v
-7876.4326 8570.5957 -7876.3271 8570.6172 -7876.3057 8570.6172 c
-7876.2432 8570.6172 -7876.0527 8570.4053 -7876.0103 8570.4053 c
-7875.9058 8570.4053 -7875.7783 8570.4902 -7875.7783 8570.6377 C
-7875.8418 8571.1855 l
f
0 D
-7879.1104 8569.6895 m
-7878.5215 8569.6895 -7878.0986 8569.7949 -7877.6982 8570.0684 c
-7877.6553 8570.0898 -7877.6138 8570.1104 -7877.5928 8570.1104 c
-7877.5498 8570.1104 -7877.5498 8570.0898 -7877.5498 8570.0469 c
-7877.5498 8569.626 -7879.4272 8567.666 -7880.5654 8567.666 c
-7880.6289 8567.666 -7880.6714 8567.707 -7880.6714 8567.7695 c
-7880.6714 8567.96 -7880.5874 8569.9629 -7880.2495 8569.9629 c
-7880.1865 8569.9629 -7880.1016 8569.9414 -7880.0386 8569.9004 c
-7879.7007 8569.752 -7879.4902 8569.6895 -7879.1104 8569.6895 c
f
-7878.5835 8572.4512 m
-7878.5835 8572.0293 -7878.5625 8571.5654 -7877.8662 8571.5654 c
-7877.2334 8571.5654 -7876.6431 8572.2197 -7876.4961 8572.3672 c
-7876.4326 8572.4092 -7876.3906 8572.4297 -7876.3486 8572.4297 c
-7876.3271 8572.4297 -7876.2847 8572.3877 -7876.2847 8572.3457 c
-7876.2847 8571.9023 -7877.6553 8570.2373 -7879.0049 8570.2373 c
-7879.2578 8570.2373 -7880.2705 8570.4053 -7880.2705 8570.9541 c
-7880.2705 8571.207 -7879.8906 8572.5781 -7879.2793 8573.6533 c
-7877.9087 8576.1416 -7873.7119 8577.7002 -7871.8145 8577.7002 c
-7870.9072 8577.7227 -7870.6118 8577.4063 -7870.4863 8577.3848 c
-7870.4648 8577.3848 -7870.4438 8577.3643 -7870.4233 8577.3643 c
-7870.3174 8577.3643 -7870.1904 8577.4277 -7870.1904 8577.5752 c
-7870.1904 8577.5967 -7870.2119 8577.5967 v
-7870.3594 8578.7344 -7870.4014 8579.1357 -7870.4014 8580.3994 c
-7870.4014 8581.793 -7870.4014 8581.9189 -7869.4321 8581.9189 c
-7868.1455 8581.9189 -7867.8506 8580.8438 -7867.8506 8580.6113 c
-7867.8506 8580.1904 -7868.4399 8579.8945 -7868.5889 8579.8945 c
-7868.7358 8579.8945 -7868.9058 8580.002 -7868.9058 8580.1904 c
-7868.9058 8580.4854 -7868.9473 8580.6328 -7869.2207 8580.6328 c
-7869.4951 8580.6328 -7869.4951 8580.2744 -7869.4951 8580.168 c
-7869.4951 8579.916 -7869.3896 8579.6631 -7869.1782 8579.5361 c
-7868.7998 8579.2832 -7868.7998 8578.8828 -7868.7998 8578.6719 c
-7868.7998 8578.5664 -7868.7998 8578.4395 -7868.8198 8578.334 c
-7868.8418 8578.166 -7870.7817 8576.1201 -7871.0977 8576.1201 c
-7871.2446 8576.1201 -7871.5615 8576.2666 -7872.4258 8576.2666 c
-7874.5767 8576.2666 -7875.5474 8574.5391 -7875.7378 8574.0117 c
-7875.9897 8573.2949 -7876.7915 8572.999 -7877.0225 8572.999 c
-7877.2129 8572.999 -7877.2129 8573.042 -7877.2129 8573.4424 c
-7877.2129 8573.5273 -7877.4238 8573.8633 y
-7877.4238 8574.0537 -7876.3906 8574.3066 -7876.3906 8574.4961 c
-7876.3906 8574.666 -7876.5801 8574.6855 -7876.7271 8574.6855 c
-7876.8115 8574.6855 -7877.8882 8574.6855 -7878.3306 8573.8633 c
-7878.5415 8573.4629 -7878.5835 8572.8945 -7878.5835 8572.4512 c
f
1 D
-7874.4927 8570.1953 m
-7874.4927 8570.1514 -7874.5137 8570.1318 -7874.5352 8570.1318 c
-7874.5986 8570.1318 -7874.7666 8570.4688 -7874.8506 8570.4688 c
-7874.9146 8570.4688 -7874.9995 8570.3848 -7875.0415 8570.2783 c
-7875.0615 8570.1953 -7875.1255 8569.7305 -7875.21 8569.7305 c
-7875.2524 8569.7305 -7875.4209 8569.9629 -7875.4634 8569.9629 c
-7875.6104 8569.9629 -7875.7158 8569.7305 -7875.7158 8569.5215 c
-7875.7158 8569.415 -7875.7783 8569.415 -7875.9263 8569.415 c
-7876.5166 8569.415 -7878.1406 8567.2432 -7878.5625 8565.4922 c
-7878.6055 8565.3242 -7878.5835 8565.1768 -7878.8994 8565.0703 c
-7881.0713 8564.334 -7883.5176 8562.1816 -7883.5176 8562.0557 c
-7883.5176 8561.9082 -7883.4336 8561.8242 -7883.3066 8561.8242 c
-7883.2432 8561.8242 -7883.1592 8561.8242 -7882.6538 8562.1602 c
-7881.7681 8562.751 -7879.7217 8564.0381 -7878.8994 8564.0381 c
-7878.6265 8564.0381 -7878.6055 8563.6797 -7878.6055 8563.4258 c
-7878.6055 8563.2354 -7878.6265 8563.0039 -7878.6265 8562.8574 c
-7878.6465 8562.583 -7878.9634 8562.2656 -7878.9634 8562.0977 c
-7878.9634 8561.9502 -7878.8154 8561.8447 -7878.6465 8561.8447 c
-7878.4575 8561.8447 -7878.3306 8561.8662 -7878.1606 8562.0557 c
-7877.8662 8562.3926 -7877.7402 8562.541 -7877.4238 8562.541 c
-7877.1914 8562.541 -7876.1377 8561.8242 -7875.8838 8561.8242 c
-7875.5679 8561.8242 -7875.1895 8562.3086 -7875.1895 8562.6045 c
-7875.1895 8563.3418 -7876.0942 8563.9326 -7876.6431 8563.9326 c
-7877.0225 8563.9326 -7877.4438 8563.8066 -7877.6353 8563.5742 c
-7877.6982 8563.5098 -7877.7607 8563.4688 -7877.8242 8563.4688 c
-7877.9937 8563.4688 -7878.1191 8563.9326 -7878.1191 8563.9746 c
-7878.1191 8564.3975 -7875.2729 8564.459 -7874.9146 8564.459 c
-7874.7666 8564.459 -7874.6401 8564.375 -7874.5352 8564.2061 c
-7874.3447 8563.9121 -7873.1855 8562.6895 -7871.6255 8562.6895 c
-7869.79 8562.6895 -7868.0825 8563.9521 -7868.0825 8565.8506 c
-7868.0825 8565.957 -7868.1245 8566.5039 -7868.1245 8566.5264 c
-7868.1245 8566.5898 -7867.0063 8568.3389 -7865.6782 8568.3389 c
-7864.6245 8568.3389 -7864.2656 8567.75 -7864.2656 8567.2637 c
-7864.2656 8567.0313 -7864.3711 8566.3789 -7864.8984 8566.3789 c
-7865.1094 8566.3789 -7865.2144 8566.5898 -7865.2144 8566.9688 c
-7865.2144 8567.0527 -7865.0039 8567.4326 -7865.0039 8567.5381 c
-7865.0039 8567.5801 -7865.0239 8567.6016 -7865.0879 8567.6016 c
-7865.4258 8567.6016 -7865.9521 8567.2432 -7866.1846 8566.5898 c
-7866.4595 8565.873 -7866.8594 8565.1768 -7867.1958 8564.7754 c
-7867.5127 8564.418 -7867.6182 8563.8262 -7867.6182 8563.4893 c
-7867.6182 8563.0039 -7867.1338 8561.8447 -7865.4878 8561.8447 c
-7864.2871 8561.8447 -7863.4434 8562.583 -7863.4434 8563.1943 c
-7863.4434 8563.8066 -7863.7598 8564.1855 -7864.2026 8564.1855 c
-7864.6455 8564.1855 -7864.9824 8563.8477 -7864.9824 8563.5098 c
-7864.9824 8562.8359 -7865.1514 8562.6895 -7865.4878 8562.6895 c
-7865.6992 8562.6895 -7865.8896 8562.8145 -7865.8896 8563.1309 c
-7865.8896 8563.3633 -7865.8896 8563.7422 -7864.3711 8565.0078 c
-7863.8857 8565.4082 -7863.4214 8566.1055 -7863.4214 8566.8848 c
-7863.4214 8567.6445 -7864.4561 8568.8447 -7865.6362 8568.8447 c
-7866.8594 8568.8447 -7867.6401 8568.0654 -7868.2515 8567.3486 c
-7868.5454 8567.0117 -7869.9814 8565.3242 -7870.0439 8565.3018 c
-7870.2334 8565.1543 -7870.3174 8565.0293 -7870.3174 8564.9023 c
-7870.3174 8564.7969 -7870.2119 8564.6914 -7870.0854 8564.6914 c
-7869.8535 8564.6914 -7868.9058 8565.6406 -7868.8198 8565.6406 c
-7868.7568 8565.6406 -7868.7153 8565.5762 -7868.7153 8565.4922 c
-7868.7153 8564.7334 -7869.8535 8563.2578 -7871.6255 8563.2578 c
-7873.1006 8563.2578 -7873.9863 8564.375 -7873.9863 8564.418 c
-7873.9863 8564.5439 -7873.8394 8564.6689 -7873.5225 8564.7334 c
-7869.6426 8565.4717 -7866.3955 8569.0215 -7866.3955 8573.6377 c
-7866.3955 8573.7441 -7866.2256 8573.7705 -7866.0786 8573.7705 c
-7865.7202 8573.7705 -7865.0879 8573.8496 -7865.0879 8573.5762 c
-7865.0879 8573.4697 -7865.1294 8573.3438 -7865.1934 8573.2168 c
-7865.5518 8572.6465 -7865.8682 8572.4727 -7865.8682 8571.5215 c
-7865.8682 8571.0586 -7865.4878 8570.5322 -7864.8984 8570.5322 c
-7863.8657 8570.5322 -7863.4214 8571.5654 -7863.4214 8571.7969 c
-7863.4214 8571.9658 -7863.5073 8572.0293 -7863.5903 8572.0293 c
-7863.7178 8572.0293 -7864.2241 8571.502 -7864.3711 8571.502 c
-7864.5615 8571.502 -7864.7085 8571.5439 -7864.7085 8572.0293 c
-7864.7085 8572.3672 -7863.4214 8576.0781 -7863.4214 8576.8789 c
-7863.4214 8577.4492 -7863.7598 8578.1455 -7864.6455 8578.6504 c
-7864.6875 8578.6719 -7864.7085 8578.6924 -7864.7085 8578.7344 c
-7864.7085 8578.8184 -7864.5615 8578.9248 -7864.4126 8578.9658 c
-7863.8018 8579.1357 -7863.4214 8579.2412 -7863.4214 8580.1904 c
-7863.4214 8580.5488 -7863.7598 8581.2236 -7864.0127 8581.2236 c
-7864.2026 8581.2236 -7864.2026 8581.1807 -7864.2026 8580.8223 c
-7864.2026 8580.6748 -7864.2446 8580.5693 -7864.3926 8580.4639 c
-7864.7085 8580.2529 -7864.7295 8580.2109 -7864.8135 8579.7266 c
-7864.8774 8579.4102 -7865.0039 8579.3242 -7866.1426 8578.6924 c
-7866.5854 8578.4189 -7866.6904 8578.1865 -7866.7744 8577.9551 c
-7866.8594 8577.7637 -7866.9233 8577.7637 -7867.4287 8577.7637 c
-7867.9561 8577.7637 -7870.5073 8575.0449 -7870.5073 8574.918 c
-7870.5073 8574.8555 -7870.3809 8574.5596 -7870.3809 8574.4961 c
-7870.3809 8574.4336 -7870.4014 8574.3916 -7870.4438 8574.3916 c
-7870.4863 8574.3916 -7870.6338 8574.6016 -7870.6758 8574.6016 c
-7870.7817 8574.6016 -7870.7817 8574.4121 -7870.7817 8574.2637 c
-7870.7817 8574.1602 -7870.5703 8573.5898 -7870.5703 8573.4424 c
-7870.5703 8573.3584 -7870.5918 8573.2949 -7870.6338 8573.2949 c
-7870.7178 8573.2949 -7870.9072 8573.7578 -7870.9922 8573.7578 c
-7871.0342 8573.7578 -7871.0762 8573.7168 -7871.0762 8573.5898 c
-7871.0762 8573.4424 -7870.8862 8572.7256 y
-7870.8862 8572.6621 -7870.9072 8572.5566 -7870.9502 8572.5566 c
-7871.0342 8572.5566 -7871.1826 8572.957 -7871.2666 8572.957 c
-7871.3286 8572.957 -7871.3926 8572.873 -7871.3926 8572.7256 c
-7871.3926 8572.6406 -7871.2446 8572.2197 -7871.2446 8572.1143 c
-7871.2446 8572.0508 -7871.2666 8571.9863 -7871.3086 8571.9863 c
-7871.3506 8571.9863 -7871.5835 8572.5996 -7871.7095 8572.5996 c
-7871.7935 8572.5996 -7871.8994 8572.4922 -7871.8994 8572.3877 c
-7871.8994 8572.3037 -7871.7729 8571.9453 -7871.7729 8571.8613 c
-7871.7729 8571.8184 -7871.7729 8571.7969 -7871.7935 8571.7969 c
-7871.8774 8571.7969 -7872.0254 8572.2822 -7872.1104 8572.2822 c
-7872.3418 8572.2822 -7872.3623 8571.8613 -7872.3623 8571.6709 c
-7872.3623 8571.5869 -7872.2998 8571.25 -7872.2998 8571.1855 c
-7872.2998 8571.123 -7872.3198 8571.1016 -7872.3418 8571.1016 c
-7872.4897 8571.1016 -7872.6782 8571.9023 -7872.8271 8571.9023 c
-7873.0386 8571.9023 -7873.0386 8571.7129 -7873.0386 8571.4814 c
-7873.0166 8570.9541 L
-7873.0166 8570.9326 -7873.0386 8570.9121 y
-7873.0586 8570.9121 -7873.1006 8570.9326 -7873.1226 8570.9961 c
-7873.1855 8571.207 -7873.3115 8571.6289 -7873.5225 8571.6289 c
-7873.6694 8571.6289 -7873.8174 8571.46 -7873.8174 8571.3135 c
-7873.8174 8571.0801 -7873.7119 8570.7002 -7873.7119 8570.4688 c
-7873.7119 8570.4053 -7873.7334 8570.3848 -7873.7754 8570.3848 c
-7873.8608 8570.3848 -7873.9863 8570.8262 -7874.0278 8570.9121 c
-7874.0918 8570.9961 -7874.1553 8571.0176 -7874.2192 8571.0176 c
-7874.5352 8571.0176 -7874.5352 8570.7002 -7874.5352 8570.5527 C
-7874.4927 8570.1953 l
f
0 D
-7875.8633 8565.8301 m
-7875.8633 8565.5977 -7877.8042 8565.4082 -7877.8662 8565.4082 c
-7877.9722 8565.4082 -7878.0352 8565.4717 -7878.0352 8565.5762 c
-7878.0352 8566.4414 -7876.2847 8568.6768 -7875.8633 8568.6768 c
-7875.7998 8568.6768 -7875.7783 8568.6563 -7875.7783 8568.5928 c
-7876.2002 8567.3486 -7876.2002 8567.0957 v
-7876.2002 8566.7158 -7876.0942 8566.4629 -7875.9058 8566.041 c
-7875.8838 8565.957 -7875.8633 8565.8936 -7875.8633 8565.8301 c
f
-7867.1338 8577.2793 m
-7866.9858 8577.2793 -7866.4795 8576.7744 -7866.3325 8576.7744 c
-7866.2065 8576.7744 -7866.0791 8576.8584 -7866.0791 8577.0059 c
-7866.0791 8577.0898 -7866.2695 8577.5322 -7866.2695 8577.6377 c
-7866.2695 8577.9961 -7865.8896 8578.293 -7865.5098 8578.293 c
-7865.1094 8578.293 -7863.9702 8577.9756 -7863.9702 8576.752 c
-7863.9702 8575.6563 -7864.3926 8575.6563 -7866.0366 8575.6563 c
-7866.3955 8575.6563 -7868.0615 8575.8457 -7868.3145 8575.8457 c
-7868.4399 8575.8457 -7868.4834 8575.6768 -7868.4834 8575.5498 c
-7868.4834 8575.5088 -7868.4834 8575.4668 -7868.4614 8575.4453 c
-7868.3984 8575.0664 -7868.1675 8574.5176 -7868.1675 8574.1377 c
-7868.1675 8569.6895 -7872.2998 8565.8301 -7874.7666 8565.8301 c
-7875.4209 8565.8301 -7875.6519 8566.6318 -7875.6519 8567.0527 c
-7875.6519 8568.7822 -7873.6694 8569.8145 -7873.4175 8569.8145 c
-7873.3545 8569.8145 -7873.3335 8569.7949 -7873.3335 8569.752 c
-7873.3335 8569.71 -7873.3545 8569.668 -7873.3975 8569.626 c
-7873.5225 8569.457 -7874.0498 8568.8447 -7874.0498 8568.2129 c
-7874.0498 8567.875 -7873.7554 8567.4326 -7872.9951 8567.4326 c
-7871.7305 8567.4326 -7871.1826 8568.7822 -7871.1826 8569.1406 c
-7871.1826 8569.2891 -7871.2446 8569.499 -7871.4561 8569.499 c
-7871.6035 8569.499 -7872.0049 8568.8447 -7872.1519 8568.8447 c
-7872.2158 8568.8447 -7872.4473 8568.9717 -7872.5103 8568.9717 c
-7872.5942 8568.9717 -7872.6582 8568.9512 -7872.7422 8568.9512 c
-7872.8057 8568.9512 -7872.8481 8569.0137 -7872.8481 8569.1191 c
-7872.8481 8569.4785 -7872.3623 8570.0469 -7871.8774 8570.3008 c
-7870.9722 8570.7637 -7869.6226 8572.0928 -7869.6226 8573.5479 c
-7869.6226 8573.9688 -7869.6846 8574.3701 -7869.6846 8574.707 c
-7869.6846 8575.2559 -7868.7568 8576.1201 -7867.8081 8577.0059 c
-7867.6401 8577.1533 -7867.3862 8577.2793 -7867.1338 8577.2793 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)
0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
-7858.9722 8587 m
-7858.9722 8560.9727 L
-7885 8560.9727 L
-7885 8587 L
-7858.9722 8587 L
n
0 Ap
0 R
0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA
0.375 w
-7867.6455 8573.9893 m
-7858.9736 8573.9893 l
S
-7871.9839 8587 m
-7871.9839 8578.3242 l
S
0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA
1.125 w
-7867.7202 8569.6504 m
-7858.9727 8569.6504 l
S
-7876.3232 8587 m
-7876.3232 8577.6455 l
S
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA
-7867.6504 8587 m
-7867.6504 8584.5869 l
-7864.9937 8584.3633 -7863.3096 8582.6602 v
-7861.6064 8580.9336 -7861.3774 8578.3281 y
-7858.9727 8578.3281 l
S
*u
0 O
0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa
1 w
-7875.7783 8570.6377 m
-7875.7783 8570.4902 -7875.9058 8570.4053 -7876.0103 8570.4053 c
-7876.0527 8570.4053 -7876.2432 8570.6172 -7876.3057 8570.6172 c
-7876.3271 8570.6172 -7876.4326 8570.5957 -7876.4326 8570.4688 c
-7876.4326 8570.4053 -7876.3271 8570.1318 y
-7876.3271 8570.1104 -7878.4155 8567.6016 -7880.5654 8567.0957 c
-7880.7344 8567.0742 -7880.8398 8567.1582 -7880.9238 8566.8418 c
-7881.3042 8565.5762 -7882.1265 8564.1426 -7883.3706 8562.8145 c
-7883.4966 8562.668 -7883.9185 8562.2461 -7884.1089 8562.2461 c
-7884.2134 8562.2461 -7884.2974 8562.2656 -7884.2974 8562.4346 c
-7884.2974 8562.7725 -7883.1167 8564.1006 -7882.9263 8564.4375 c
-7882.0845 8565.8936 -7882.0845 8566.5674 -7882.0845 8566.7998 c
-7882.0845 8566.9258 -7882.2734 8567.0527 -7882.6538 8567.0527 c
-7882.8433 8567.0527 -7883.0752 8567.0313 -7883.2017 8567.0313 c
-7883.3281 8567.0117 -7883.8975 8566.7354 -7884.0449 8566.7354 c
-7884.2134 8566.7354 -7884.3193 8566.8633 -7884.3193 8567.0313 c
-7884.3193 8567.2227 -7884.2559 8567.3486 -7884.0654 8567.4961 c
-7883.3921 8568.1074 -7883.3486 8568.1279 -7883.3486 8568.6133 c
-7883.3486 8568.8877 -7884.0449 8570.0898 -7884.0449 8570.3848 c
-7884.0449 8570.7002 -7883.5806 8570.9326 -7883.3066 8570.9326 c
-7882.4424 8570.9326 -7882.21 8569.457 -7882.21 8569.1406 c
-7882.21 8568.9082 -7882.5054 8567.8135 y
-7882.5054 8567.6221 -7882.4424 8567.6221 -7881.9995 8567.6221 c
-7881.6626 8567.6221 -7881.5986 8570.5527 -7881.5986 8570.7637 c
-7881.5986 8570.9326 -7881.6826 8571.0586 -7881.8511 8571.166 c
-7882.1265 8571.3555 -7883.4336 8572.6826 -7883.4121 8574.0957 c
-7883.4121 8576.585 -7881.6406 8577.5322 -7880.9458 8577.6172 c
-7880.5874 8577.6602 -7879.7007 8577.6377 -7879.4058 8577.8076 c
-7878.9424 8578.0391 -7877.8042 8579.1992 -7877.8042 8580.1904 c
-7877.8042 8581.3916 -7878.5215 8581.75 -7878.8774 8581.75 c
-7879.2378 8581.75 -7879.5103 8581.7295 -7879.5103 8581.2441 c
-7879.5103 8581.0332 -7879.3423 8580.8008 -7879.1318 8580.7383 c
-7879.0474 8580.7168 -7878.2881 8580.5273 -7878.2881 8580.2109 c
-7878.2881 8580.0625 -7878.3721 8580.0625 -7878.5835 8580.0625 c
-7879.1318 8580.0625 -7879.8066 8579.8535 -7881.0928 8578.6504 c
-7881.4722 8578.3135 -7882.1265 8578.2295 -7882.5679 8578.2295 c
-7883.0537 8578.2295 -7884.2974 8578.6924 -7884.2974 8580.1904 c
-7884.2974 8582.0234 -7883.4751 8582.7207 -7882.8433 8582.7207 c
-7882.4209 8582.7207 -7881.8936 8582.4033 -7881.8936 8582.1289 c
-7881.8936 8581.793 -7881.9575 8581.3711 -7882.5479 8581.3281 c
-7883.0537 8581.2861 -7883.3066 8581.0537 -7883.3066 8580.7168 c
-7883.3066 8580.5059 -7883.1592 8580.2949 -7882.8218 8580.2949 c
-7882.3154 8580.2949 -7881.7041 8580.8652 -7881.0713 8581.6025 c
-7880.6714 8582.0879 -7879.7007 8582.6152 -7878.9209 8582.6152 c
-7878.1191 8582.6152 -7877.0654 8581.709 -7877.0654 8580.3369 c
-7877.0654 8579.0723 -7878.4995 8577.7637 -7879.2378 8577.2383 c
-7879.9546 8576.7109 -7880.3335 8576.3311 -7880.46 8576.1201 c
-7880.5654 8575.9727 -7880.9033 8575.0234 -7881.1143 8575.0234 c
-7881.2607 8575.0234 -7881.3672 8575.1914 -7881.3672 8575.4033 c
-7881.3672 8575.7197 -7881.1143 8576.3535 -7880.7759 8576.6895 c
-7880.6929 8576.7949 -7880.6494 8576.8584 -7880.6494 8576.9209 c
-7880.6494 8577.0693 -7880.8398 8577.0898 -7880.9873 8577.0898 c
-7881.5767 8577.0898 -7882.7793 8576.1201 -7882.7793 8574.2861 c
-7882.7793 8572.7041 -7881.7881 8571.8613 -7881.6406 8571.8613 c
-7881.5361 8571.8613 -7881.4297 8571.9658 -7881.3672 8572.1777 c
-7879.6592 8578.334 -7874.7822 8579.5576 -7872.3774 8579.5576 c
-7872.2729 8579.5576 -7872.1895 8579.6201 -7872.1895 8579.7695 c
-7872.1895 8579.8945 -7872.1895 8580.9922 -7872.3359 8580.9922 c
-7872.3774 8580.9922 -7872.4414 8580.9697 -7872.5264 8580.9072 c
-7873.0942 8580.4434 -7873.3755 8580.085 -7874.3022 8580.085 c
-7874.7666 8580.085 -7875.5679 8580.6113 -7875.5679 8581.2236 c
-7875.5679 8582.0029 -7874.8936 8582.7207 -7874.4082 8582.7207 c
-7874.0498 8582.7207 -7873.9023 8582.6357 -7873.9023 8582.5098 c
-7873.9023 8582.3818 -7874.3662 8581.9404 -7874.3662 8581.793 c
-7874.3662 8581.5391 -7874.3242 8581.3916 -7873.8809 8581.3916 c
-7873.4814 8581.3916 -7872.7842 8581.5615 -7872.3418 8581.8145 c
-7871.8774 8582.0879 -7870.7393 8582.7207 -7869.7065 8582.7207 c
-7868.9473 8582.7207 -7867.9561 8582.2773 -7867.4702 8581.4766 c
-7867.4287 8581.4121 -7867.3862 8581.3916 -7867.3447 8581.3916 c
-7867.2393 8581.3916 -7867.1543 8581.4766 -7867.1338 8581.625 c
-7867.0913 8582.0234 -7866.7534 8582.7207 -7865.9312 8582.7207 c
-7865.3408 8582.7207 -7864.8135 8582.2139 -7864.8135 8581.7705 c
-7864.8135 8581.6025 -7864.9194 8581.5391 -7865.0239 8581.5391 c
-7865.1094 8581.5391 -7865.4878 8581.793 -7865.5942 8581.793 c
-7865.7407 8581.793 -7866.6479 8581.1807 -7866.7334 8581.0332 c
-7867.5127 8579.7471 -7867.5977 8579.5996 -7868.2295 8579.3457 c
-7868.3984 8579.2617 -7868.3984 8579.1777 -7868.3984 8578.3135 c
-7868.3984 8578.1865 -7868.3984 8577.8906 -7868.5454 8577.7227 c
-7868.8198 8577.4492 -7870.9287 8575.3818 -7871.1392 8575.3818 c
-7871.2241 8575.3818 -7871.4985 8575.6563 -7871.5835 8575.6563 c
-7871.6035 8575.6563 -7871.6255 8575.6563 -7871.6255 8575.6143 C
-7871.6035 8575.4668 l
-7871.6035 8575.2988 -7871.6455 8575.2129 -7871.8564 8575.2129 c
-7871.9199 8575.2129 -7872.1943 8575.3398 -7872.2568 8575.3398 c
-7872.3198 8575.3398 -7872.3623 8574.8975 -7872.4473 8574.8975 c
-7872.4678 8574.8975 -7872.8057 8575.1289 -7872.8896 8575.1289 c
-7873.0166 8575.1289 -7873.1006 8575.0449 -7873.1006 8574.9395 c
-7873.1006 8574.877 -7873.1006 8574.3916 -7873.2065 8574.3916 c
-7873.2915 8574.3916 -7873.5225 8574.6855 -7873.5654 8574.6855 c
-7873.5854 8574.6855 -7873.5854 8574.666 -7873.5854 8574.6016 C
-7873.5439 8574.1807 l
-7873.5439 8574.1162 -7873.5854 8574.0957 -7873.6494 8574.0957 c
-7873.7119 8574.0957 -7873.9658 8574.4121 -7874.0498 8574.4121 c
-7874.0918 8574.4121 -7874.1138 8574.3701 -7874.1138 8574.2861 c
-7874.1138 8574.2441 -7873.9233 8573.5273 -7873.9233 8573.3789 c
-7873.9233 8573.2949 -7873.9658 8573.252 -7874.0078 8573.252 c
-7874.0918 8573.252 -7874.4297 8573.6113 -7874.4722 8573.6113 c
-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4927 8573.5898 c
-7874.4927 8573.5059 -7874.3882 8573.1465 -7874.3882 8573.127 c
-7874.3882 8573.1055 -7874.4082 8573.084 -7874.4297 8573.084 c
-7874.4722 8573.084 -7874.6826 8573.2949 -7874.7446 8573.2949 c
-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7666 8573.252 c
-7874.7666 8573.084 -7874.5137 8572.3457 -7874.5137 8572.2822 c
-7874.5137 8572.2607 -7874.5352 8572.2402 -7874.5562 8572.2402 c
-7874.6826 8572.2402 -7875.1055 8572.8105 -7875.1465 8572.8105 c
-7875.1675 8572.8105 -7875.1675 8572.7891 -7875.1675 8572.7256 c
-7875.1675 8572.5352 -7874.8936 8571.6289 y
-7874.8936 8571.6074 -7874.9146 8571.5869 -7874.9351 8571.5869 c
-7875.0615 8571.5869 -7875.4414 8572.1338 -7875.5049 8572.1338 c
-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5264 8572.0928 c
-7875.2729 8571.1855 -7875.2729 8571.1016 v
-7875.2729 8570.9961 -7875.3154 8570.9541 -7875.3994 8570.9541 c
-7875.4634 8570.9541 -7875.6943 8571.291 -7875.7783 8571.291 c
-7875.8218 8571.291 -7875.8418 8571.25 -7875.8418 8571.1855 c
-7875.7783 8570.6377 L
f
1 D
-7880.0386 8569.9004 m
-7880.1016 8569.9414 -7880.1865 8569.9629 -7880.2495 8569.9629 c
-7880.5874 8569.9629 -7880.6714 8567.96 -7880.6714 8567.7695 c
-7880.6714 8567.707 -7880.6289 8567.666 -7880.5654 8567.666 c
-7879.4272 8567.666 -7877.5498 8569.627 -7877.5498 8570.0469 c
-7877.5498 8570.0898 -7877.5498 8570.1104 -7877.5928 8570.1104 c
-7877.6138 8570.1104 -7877.6553 8570.0898 -7877.6982 8570.0684 c
-7878.0986 8569.7949 -7878.5215 8569.6895 -7879.1104 8569.6895 c
-7879.4902 8569.6895 -7879.7007 8569.752 -7880.0386 8569.9004 c
f
-7878.3306 8573.8633 m
-7877.8882 8574.6855 -7876.8115 8574.6855 -7876.7271 8574.6855 c
-7876.5801 8574.6855 -7876.3906 8574.666 -7876.3906 8574.4961 c
-7876.3906 8574.3066 -7877.4238 8574.0537 -7877.4238 8573.8633 c
-7877.2129 8573.5273 -7877.2129 8573.4424 v
-7877.2129 8573.043 -7877.2129 8573 -7877.0225 8573 c
-7876.7915 8573 -7875.9897 8573.2949 -7875.7378 8574.0117 c
-7875.5474 8574.5391 -7874.5767 8576.2666 -7872.4258 8576.2666 c
-7871.5615 8576.2666 -7871.2446 8576.1201 -7871.0977 8576.1201 c
-7870.7817 8576.1201 -7868.8418 8578.166 -7868.8198 8578.334 c
-7868.7998 8578.4395 -7868.7998 8578.5664 -7868.7998 8578.6719 c
-7868.7998 8578.8828 -7868.7998 8579.2832 -7869.1782 8579.5361 c
-7869.3896 8579.6631 -7869.4951 8579.916 -7869.4951 8580.168 c
-7869.4951 8580.2744 -7869.4951 8580.6328 -7869.2207 8580.6328 c
-7868.9473 8580.6328 -7868.9058 8580.4854 -7868.9058 8580.1904 c
-7868.9058 8580.002 -7868.7358 8579.8945 -7868.5889 8579.8945 c
-7868.4399 8579.8945 -7867.8506 8580.1904 -7867.8506 8580.6113 c
-7867.8506 8580.8438 -7868.1455 8581.9189 -7869.4321 8581.9189 c
-7870.4014 8581.9189 -7870.4014 8581.793 -7870.4014 8580.3994 c
-7870.4014 8579.1357 -7870.3594 8578.7344 -7870.2119 8577.5967 c
-7870.1904 8577.5967 -7870.1904 8577.5752 y
-7870.1904 8577.4277 -7870.3174 8577.3643 -7870.4233 8577.3643 c
-7870.4438 8577.3643 -7870.4648 8577.3848 -7870.4863 8577.3848 c
-7870.6118 8577.4063 -7870.9072 8577.7227 -7871.8145 8577.7002 c
-7873.7119 8577.7002 -7877.9087 8576.1416 -7879.2793 8573.6533 c
-7879.8906 8572.5781 -7880.2705 8571.207 -7880.2705 8570.9541 c
-7880.2705 8570.4053 -7879.2578 8570.2373 -7879.0049 8570.2373 c
-7877.6553 8570.2373 -7876.2847 8571.9023 -7876.2847 8572.3457 c
-7876.2847 8572.3877 -7876.3271 8572.4297 -7876.3486 8572.4297 c
-7876.3906 8572.4297 -7876.4326 8572.4092 -7876.4961 8572.3672 c
-7876.6431 8572.2197 -7877.2334 8571.5654 -7877.8662 8571.5654 c
-7878.5625 8571.5654 -7878.5835 8572.0293 -7878.5835 8572.4512 c
-7878.5835 8572.8945 -7878.5415 8573.4629 -7878.3306 8573.8633 c
f
0 D
-7874.5352 8570.5527 m
-7874.5352 8570.7002 -7874.5352 8571.0176 -7874.2192 8571.0176 c
-7874.1553 8571.0176 -7874.0918 8570.9961 -7874.0278 8570.9121 c
-7873.9863 8570.8262 -7873.8608 8570.3848 -7873.7754 8570.3848 c
-7873.7334 8570.3848 -7873.7119 8570.4053 -7873.7119 8570.4688 c
-7873.7119 8570.7002 -7873.8174 8571.0801 -7873.8174 8571.3135 c
-7873.8174 8571.46 -7873.6694 8571.6289 -7873.5225 8571.6289 c
-7873.3115 8571.6289 -7873.1855 8571.207 -7873.1226 8570.9961 c
-7873.1006 8570.9326 -7873.0586 8570.9121 -7873.0386 8570.9121 c
-7873.0166 8570.9326 -7873.0166 8570.9541 V
-7873.0386 8571.4814 l
-7873.0386 8571.7129 -7873.0386 8571.9023 -7872.8271 8571.9023 c
-7872.6782 8571.9023 -7872.4897 8571.1016 -7872.3418 8571.1016 c
-7872.3198 8571.1016 -7872.2998 8571.123 -7872.2998 8571.1855 c
-7872.2998 8571.25 -7872.3623 8571.5869 -7872.3623 8571.6709 c
-7872.3623 8571.8613 -7872.3418 8572.2822 -7872.1104 8572.2822 c
-7872.0254 8572.2822 -7871.8774 8571.7969 -7871.7935 8571.7969 c
-7871.7729 8571.7969 -7871.7729 8571.8184 -7871.7729 8571.8613 c
-7871.7729 8571.9453 -7871.8994 8572.3037 -7871.8994 8572.3877 c
-7871.8994 8572.4922 -7871.7935 8572.5996 -7871.7095 8572.5996 c
-7871.5835 8572.5996 -7871.3506 8571.9863 -7871.3086 8571.9863 c
-7871.2666 8571.9863 -7871.2446 8572.0508 -7871.2446 8572.1143 c
-7871.2446 8572.2197 -7871.3926 8572.6406 -7871.3926 8572.7256 c
-7871.3926 8572.873 -7871.3286 8572.957 -7871.2666 8572.957 c
-7871.1826 8572.957 -7871.0342 8572.5566 -7870.9502 8572.5566 c
-7870.9072 8572.5566 -7870.8862 8572.6621 -7870.8862 8572.7256 c
-7871.0762 8573.4424 -7871.0762 8573.5898 v
-7871.0762 8573.7168 -7871.0342 8573.7578 -7870.9922 8573.7578 c
-7870.9072 8573.7578 -7870.7178 8573.2949 -7870.6338 8573.2949 c
-7870.5918 8573.2949 -7870.5703 8573.3584 -7870.5703 8573.4424 c
-7870.5703 8573.5898 -7870.7817 8574.1602 -7870.7817 8574.2637 c
-7870.7817 8574.4121 -7870.7817 8574.6016 -7870.6758 8574.6016 c
-7870.6338 8574.6016 -7870.4863 8574.3916 -7870.4438 8574.3916 c
-7870.4014 8574.3916 -7870.3809 8574.4336 -7870.3809 8574.4961 c
-7870.3809 8574.5596 -7870.5073 8574.8555 -7870.5073 8574.918 c
-7870.5073 8575.0449 -7867.9561 8577.7637 -7867.4287 8577.7637 c
-7866.9233 8577.7637 -7866.8594 8577.7637 -7866.7744 8577.9551 c
-7866.6904 8578.1865 -7866.5854 8578.4189 -7866.1426 8578.6924 c
-7865.0039 8579.3242 -7864.8774 8579.4102 -7864.8135 8579.7266 c
-7864.7295 8580.2109 -7864.7085 8580.2529 -7864.3926 8580.4639 c
-7864.2446 8580.5693 -7864.2026 8580.6748 -7864.2026 8580.8223 c
-7864.2026 8581.1807 -7864.2026 8581.2236 -7864.0127 8581.2236 c
-7863.7598 8581.2236 -7863.4214 8580.5488 -7863.4214 8580.1904 c
-7863.4214 8579.2412 -7863.8018 8579.1357 -7864.4126 8578.9658 c
-7864.5615 8578.9248 -7864.7085 8578.8184 -7864.7085 8578.7344 c
-7864.7085 8578.6924 -7864.6875 8578.6719 -7864.6455 8578.6504 c
-7863.7598 8578.1455 -7863.4214 8577.4492 -7863.4214 8576.8789 c
-7863.4214 8576.0781 -7864.7085 8572.3672 -7864.7085 8572.0293 c
-7864.7085 8571.5439 -7864.5615 8571.502 -7864.3711 8571.502 c
-7864.2241 8571.502 -7863.7178 8572.0293 -7863.5903 8572.0293 c
-7863.5073 8572.0293 -7863.4214 8571.9658 -7863.4214 8571.7969 c
-7863.4214 8571.5654 -7863.8657 8570.5322 -7864.8984 8570.5322 c
-7865.4878 8570.5322 -7865.8682 8571.0586 -7865.8682 8571.5215 c
-7865.8682 8572.4727 -7865.5518 8572.6465 -7865.1934 8573.2168 c
-7865.1294 8573.3438 -7865.0879 8573.4697 -7865.0879 8573.5762 c
-7865.0879 8573.8496 -7865.7202 8573.7705 -7866.0786 8573.7705 c
-7866.2256 8573.7705 -7866.3955 8573.7441 -7866.3955 8573.6377 c
-7866.3955 8569.0215 -7869.6426 8565.4717 -7873.5225 8564.7334 c
-7873.8394 8564.6689 -7873.9863 8564.5439 -7873.9863 8564.418 c
-7873.9863 8564.375 -7873.1006 8563.2578 -7871.6255 8563.2578 c
-7869.8535 8563.2578 -7868.7153 8564.7334 -7868.7153 8565.4922 c
-7868.7153 8565.5762 -7868.7568 8565.6406 -7868.8198 8565.6406 c
-7868.9058 8565.6406 -7869.8535 8564.6914 -7870.0854 8564.6914 c
-7870.2119 8564.6914 -7870.3174 8564.7969 -7870.3174 8564.9023 c
-7870.3174 8565.0293 -7870.2334 8565.1543 -7870.0439 8565.3018 c
-7869.9814 8565.3242 -7868.5454 8567.0117 -7868.2515 8567.3486 c
-7867.6401 8568.0654 -7866.8594 8568.8447 -7865.6362 8568.8447 c
-7864.4561 8568.8447 -7863.4214 8567.6445 -7863.4214 8566.8848 c
-7863.4214 8566.1055 -7863.8857 8565.4082 -7864.3711 8565.0078 c
-7865.8896 8563.7422 -7865.8896 8563.3633 -7865.8896 8563.1309 c
-7865.8896 8562.8145 -7865.6992 8562.6895 -7865.4878 8562.6895 c
-7865.1514 8562.6895 -7864.9824 8562.8359 -7864.9824 8563.5098 c
-7864.9824 8563.8477 -7864.6455 8564.1855 -7864.2026 8564.1855 c
-7863.7598 8564.1855 -7863.4434 8563.8066 -7863.4434 8563.1943 c
-7863.4434 8562.584 -7864.2871 8561.8447 -7865.4878 8561.8447 c
-7867.1338 8561.8447 -7867.6182 8563.0039 -7867.6182 8563.4893 c
-7867.6182 8563.8262 -7867.5127 8564.418 -7867.1958 8564.7754 c
-7866.8594 8565.1768 -7866.4595 8565.873 -7866.1846 8566.5898 c
-7865.9521 8567.2432 -7865.4258 8567.6016 -7865.0879 8567.6016 c
-7865.0239 8567.6016 -7865.0039 8567.5801 -7865.0039 8567.5381 c
-7865.0039 8567.4326 -7865.2144 8567.0527 -7865.2144 8566.9688 c
-7865.2144 8566.5898 -7865.1094 8566.3789 -7864.8984 8566.3789 c
-7864.3711 8566.3789 -7864.2656 8567.0313 -7864.2656 8567.2637 c
-7864.2656 8567.75 -7864.6245 8568.3389 -7865.6782 8568.3389 c
-7867.0063 8568.3389 -7868.1245 8566.5898 -7868.1245 8566.5264 c
-7868.1245 8566.5039 -7868.0825 8565.957 -7868.0825 8565.8506 c
-7868.0825 8563.9521 -7869.79 8562.6895 -7871.6255 8562.6895 c
-7873.1855 8562.6895 -7874.3447 8563.9121 -7874.5352 8564.2061 c
-7874.6401 8564.375 -7874.7666 8564.459 -7874.9146 8564.459 c
-7875.2729 8564.459 -7878.1191 8564.3975 -7878.1191 8563.9746 c
-7878.1191 8563.9326 -7877.9937 8563.4688 -7877.8242 8563.4688 c
-7877.7607 8563.4688 -7877.6982 8563.5098 -7877.6353 8563.5742 c
-7877.4438 8563.8066 -7877.0225 8563.9326 -7876.6431 8563.9326 c
-7876.0942 8563.9326 -7875.1895 8563.3418 -7875.1895 8562.6045 c
-7875.1895 8562.3086 -7875.5679 8561.8242 -7875.8838 8561.8242 c
-7876.1377 8561.8242 -7877.1914 8562.541 -7877.4238 8562.541 c
-7877.7402 8562.541 -7877.8662 8562.3926 -7878.1606 8562.0557 c
-7878.3306 8561.8662 -7878.4575 8561.8447 -7878.6465 8561.8447 c
-7878.8154 8561.8447 -7878.9634 8561.9502 -7878.9634 8562.0977 c
-7878.9634 8562.2656 -7878.6465 8562.584 -7878.6265 8562.8574 c
-7878.6265 8563.0039 -7878.6055 8563.2354 -7878.6055 8563.4258 c
-7878.6055 8563.6797 -7878.6265 8564.0381 -7878.8994 8564.0381 c
-7879.7217 8564.0381 -7881.7681 8562.752 -7882.6538 8562.1602 c
-7883.1592 8561.8242 -7883.2432 8561.8242 -7883.3066 8561.8242 c
-7883.4336 8561.8242 -7883.5176 8561.9082 -7883.5176 8562.0557 c
-7883.5176 8562.1816 -7881.0713 8564.334 -7878.8994 8565.0703 c
-7878.5835 8565.1768 -7878.6055 8565.3242 -7878.5625 8565.4922 c
-7878.1406 8567.2432 -7876.5166 8569.416 -7875.9263 8569.416 c
-7875.7783 8569.416 -7875.7158 8569.416 -7875.7158 8569.5215 c
-7875.7158 8569.7305 -7875.6104 8569.9629 -7875.4634 8569.9629 c
-7875.4209 8569.9629 -7875.2524 8569.7305 -7875.21 8569.7305 c
-7875.1255 8569.7305 -7875.0615 8570.1953 -7875.0415 8570.2783 c
-7874.9995 8570.3848 -7874.9146 8570.4688 -7874.8506 8570.4688 c
-7874.7666 8570.4688 -7874.5986 8570.1318 -7874.5352 8570.1318 c
-7874.5137 8570.1318 -7874.4927 8570.1514 -7874.4927 8570.1953 c
-7874.5352 8570.5527 L
f
1 D
-7875.9058 8566.041 m
-7876.0942 8566.4629 -7876.2002 8566.7158 -7876.2002 8567.0957 c
-7876.2002 8567.3486 -7875.7783 8568.5928 y
-7875.7783 8568.6563 -7875.7998 8568.6768 -7875.8633 8568.6768 c
-7876.2847 8568.6768 -7878.0352 8566.4414 -7878.0352 8565.5762 c
-7878.0352 8565.4717 -7877.9722 8565.4082 -7877.8662 8565.4082 c
-7877.8042 8565.4082 -7875.8633 8565.5977 -7875.8633 8565.8301 c
-7875.8633 8565.8936 -7875.8838 8565.957 -7875.9058 8566.041 c
f
-7867.8081 8577.0059 m
-7868.7568 8576.1201 -7869.6846 8575.2559 -7869.6846 8574.707 c
-7869.6846 8574.3701 -7869.6226 8573.9688 -7869.6226 8573.5479 c
-7869.6226 8572.0928 -7870.9722 8570.7637 -7871.8774 8570.3008 c
-7872.3623 8570.0469 -7872.8481 8569.4785 -7872.8481 8569.1191 c
-7872.8481 8569.0137 -7872.8057 8568.9512 -7872.7422 8568.9512 c
-7872.6582 8568.9512 -7872.5942 8568.9717 -7872.5103 8568.9717 c
-7872.4473 8568.9717 -7872.2158 8568.8447 -7872.1519 8568.8447 c
-7872.0049 8568.8447 -7871.6035 8569.5 -7871.4561 8569.5 c
-7871.2446 8569.5 -7871.1826 8569.2891 -7871.1826 8569.1406 c
-7871.1826 8568.7822 -7871.7305 8567.4326 -7872.9951 8567.4326 c
-7873.7554 8567.4326 -7874.0498 8567.875 -7874.0498 8568.2129 c
-7874.0498 8568.8447 -7873.5225 8569.457 -7873.3975 8569.627 c
-7873.3545 8569.668 -7873.3335 8569.71 -7873.3335 8569.752 c
-7873.3335 8569.7949 -7873.3545 8569.8145 -7873.4175 8569.8145 c
-7873.6694 8569.8145 -7875.6519 8568.7822 -7875.6519 8567.0527 c
-7875.6519 8566.6318 -7875.4209 8565.8301 -7874.7666 8565.8301 c
-7872.2998 8565.8301 -7868.1675 8569.6895 -7868.1675 8574.1377 c
-7868.1675 8574.5176 -7868.3984 8575.0664 -7868.4614 8575.4453 c
-7868.4834 8575.4668 -7868.4834 8575.5088 -7868.4834 8575.5498 c
-7868.4834 8575.6768 -7868.4399 8575.8457 -7868.3145 8575.8457 c
-7868.0615 8575.8457 -7866.3955 8575.6563 -7866.0366 8575.6563 c
-7864.3926 8575.6563 -7863.9702 8575.6563 -7863.9702 8576.752 c
-7863.9702 8577.9756 -7865.1094 8578.293 -7865.5098 8578.293 c
-7865.8896 8578.293 -7866.2695 8577.9961 -7866.2695 8577.6377 c
-7866.2695 8577.5322 -7866.0791 8577.0898 -7866.0791 8577.0059 c
-7866.0791 8576.8584 -7866.2065 8576.7744 -7866.3325 8576.7744 c
-7866.4795 8576.7744 -7866.9858 8577.2793 -7867.1338 8577.2793 c
-7867.3862 8577.2793 -7867.6401 8577.1533 -7867.8081 8577.0059 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)
0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d
0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
0 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7867 8578 m
-7874.8379 8573.4746 L
-7874.8379 8576.5625 L
-7885 8576.5625 L
-7885 8579.4375 L
-7874.8379 8579.4375 L
-7874.8379 8582.5264 L
-7867 8578 L
f
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
-7871.2939 8576.3857 m
-7874.0879 8574.7744 L
-7874.0879 8577.3008 L
-7885 8577.3008 L
-7885 8578.7002 L
-7874.0879 8578.7002 L
-7874.0879 8581.2266 L
-7871.2939 8579.6133 L
-7868.5 8578 L
-7871.2939 8576.3857 L
f
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
-7873.1675 8577.0918 m
-7873.5586 8577.0918 -7873.8896 8577.3408 -7874.0176 8577.6865 C
-7885 8577.6865 L
-7885 8578.3125 L
-7874.0176 8578.3125 L
-7873.8896 8578.6602 -7873.5586 8578.9082 -7873.1675 8578.9082 c
-7872.6655 8578.9082 -7872.2588 8578.502 -7872.2588 8578 c
-7872.2588 8577.499 -7872.6655 8577.0918 -7873.1675 8577.0918 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
(/ Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.037415 0.000031 0.938323 0.000031 1 0.945098 0 Xa
(CMYK Yellow)
Pc
0.830198 0.070466 0.955505 0.00293 0 0.647059 0.317647 Xa
(CMYK Green)
Pc
0.696681 0.145022 0.000031 0.000031 0 0.678431 0.933333 Xa
(CMYK Cyan)
Pc
0.9935 0.966247 0.040497 0.005554 0.180392 0.192157 0.568627 Xa
(CMYK Blue)
Pc
0.01062 0.992554 0.011963 0.000031 0.921569 0 0.545098 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000671 0.901213 0.849546 0.000031 0.933333 0.25098 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.00116 0.798733 0.949126 0.000244 0.941176 0.352941 0.156863 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.003662 0.505333 0.989288 0.000031 0.964706 0.572549 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.003021 0.35346 0.847349 0.000031 0.980392 0.686275 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.054444 0.003235 0.905974 0.000031 0.976471 0.92549 0.192157 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.20148 0.003815 0.989227 0.000031 0.839216 0.870588 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.505791 0.004547 0.994018 0.000031 0.545098 0.772549 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.754574 0.006806 0.99881 0.000214 0.215686 0.701961 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.86276 0.170748 1 0.035309 0 0.576471 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.757656 0.005707 0.748348 0.000031 0.160784 0.705882 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.790921 0.110048 0.453498 0.001251 0 0.65098 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.705592 0.159396 0.000092 0.000031 0.14902 0.662745 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.851041 0.499489 0.004303 0.000031 0.105882 0.458824 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.99588 0.93521 0.066804 0.005341 0.168627 0.219608 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.305394 0.220737 0.14902 0.133333 0.380392 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.751614 0.986633 0.016571 0.002991 0.396078 0.176471 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.513085 0.995178 0.021149 0.001465 0.564706 0.152941 0.556863 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.097017 0.997467 0.483467 0.004913 0.85098 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.005951 0.949981 0.201511 0.000031 0.92549 0.160784 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.25568 0.249699 0.402838 0.000031 0.756863 0.705882 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.395941 0.446571 0.488045 0.063233 0.603922 0.517647 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.518273 0.513481 0.611536 0.231357 0.443137 0.396078 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.543633 0.603143 0.645685 0.397101 0.352941 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.236454 0.395239 0.642084 0.015473 0.764706 0.6 0.419608 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.307591 0.494209 0.757412 0.096529 0.658824 0.486275 0.309804 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.360388 0.604211 0.80734 0.241825 0.541176 0.364706 0.231373 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.391821 0.642573 0.894743 0.355108 0.458824 0.298039 0.156863 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.51931 0.703029 0.790982 0.698695 0.231373 0.137255 0.078431 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
0.55 1 0 0.15 (PANTONE 259 C) 0 x
(PANTONE 259 C)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.581781 0.492103 0.470741 0.1514 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.454841 0.363958 0.351537 0.014527 0.572549 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.367559 0.287694 0.276036 0.000031 0.65098 0.658824 0.670588 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.268681 0.203189 0.199283 0.000031 0.733333 0.741176 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.174166 0.123781 0.126894 0.000031 0.815686 0.823529 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.039734 0.02884 0.023896 0.000031 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.005646 0.744991 0.988983 0.000427 0.945098 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.016846 0.093446 0.972717 0.000031 1 0.866667 0.082353 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.994598 0.874296 0.035157 0.001648 0.133333 0.25098 0.6 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.594995 0.897002 0.007355 0.000244 0.498039 0.247059 0.592157 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
*u
0 O
0.656641 1 0.000031 0.001831 0.482353 0 0.6 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
228.1729 474.5376 m
226.4243 474.3633 219.1392 472.7329 216.6919 472.2095 c
214.0703 471.5103 190.1226 453.0093 188.5493 448.4648 c
188.2002 446.8906 188.0254 444.4722 188.0254 442.1997 c
187.8496 438.5293 L
187.8496 435.9063 188.5776 431.6841 188.9282 429.4126 c
190.4995 429.0615 201.8975 429.3662 203.9946 429.0171 c
203.7329 424.3203 L
201.6875 424.4658 187.2173 424.4346 178.9492 424.4346 c
174.7529 424.4346 161.2637 423.9722 157.1201 424.0967 c
157.9023 428.5674 L
160.1738 428.7388 169.5859 428.1582 171.6543 430.3428 c
172.6802 431.4253 172.354 432.5874 172.354 438.8774 c
172.354 441.8491 L
172.354 443.25 172.354 445.8701 172.0029 448.3184 c
171.1294 450.9429 150.0352 477.2788 144.6167 481.4741 c
143.0464 481.9995 133.1841 482.9844 130.7393 483.5078 c
130.6143 487.5356 L
131.8354 488.146 142.8003 487.3867 153.4395 487.7798 c
160.4326 488.0386 176.3853 487.7798 178.355 487.5459 c
177.8521 483.9971 L
175.7539 483.4727 165.6494 483.2793 163.0288 482.5806 c
169.8457 472.4424 180.6265 459.3887 184.1245 454.3179 c
186.0454 457.1157 202.9448 468.7437 203.4688 472.7617 c
200.8457 473.2856 192.1626 474.5376 190.7646 474.5376 c
189.9346 479.1157 L
192.3125 479.4878 204.8291 479.1157 211.0483 479.1157 c
216.4199 479.1157 227.8926 479.1157 231.1533 478.8477 c
228.1729 474.5376 L
f
*U
*u
264.2964 426.2798 m
263.5229 426.3892 254.7676 426.3843 251.5698 426.3843 c
249.6982 426.3843 240.1563 426.4434 238.5034 426.4434 c
238.9995 430.5386 L
241.2041 430.646 245.3057 431.5361 247.1777 431.7563 c
245.9668 434.5112 241.9673 443.2573 241.0859 444.9077 c
238.7715 444.9077 230.4517 444.6499 228.1382 444.2061 c
227.6963 443.4351 224.5376 440.334 223.9873 436.1514 c
225.5303 435.8164 228.4883 435.1831 230.2515 434.9629 c
229.6001 430.7808 L
227.729 430.8882 220.2578 430.6699 218.4951 430.7808 c
216.8418 430.7808 209.1646 430.7603 207.7324 430.5405 c
209.0977 434.9629 L
210.8604 435.1831 214.9204 436.4473 216.4624 436.7773 c
218.7769 440.082 229.4927 461.0269 230.374 463.0078 c
228.9399 463.3428 226.5059 464.4907 224.9629 464.7119 c
224.7495 467.7378 L
226.624 467.6274 235.9346 467.3491 236.9268 467.3979 c
239.1382 467.5054 247.3643 467.4653 249.2354 467.5747 c
248.543 464.6011 L
246.8887 464.4907 244.2031 463.687 242.6567 463.3569 c
243.4302 461.0444 246.4985 453.5835 248.8105 448.0757 c
250.5752 444.1089 253.501 436.3354 256.2539 431.8159 c
258.1274 431.4873 262.4258 430.2236 264.4072 430.1152 c
264.5186 429.0137 L
264.2964 426.2798 l
f
1 D
235.4795 461.3242 m
235.3696 462.0176 L
233.3862 457.3926 230.0181 450.1191 229.3589 448.354 c
240.2095 448.3604 l
238.8867 451.7778 236.4712 458.4585 235.4795 461.3242 c
f
*U
*u
0 D
328.832 437.6143 m
327.3145 437.7319 319.999 437.7192 316.2617 437.6143 c
313.2627 437.5293 306.1396 437.8862 302.749 437.7397 c
302.4893 441.896 L
303.6592 442.0142 310.9502 442.5078 312.3564 442.7407 c
312.8232 444.9624 312.6006 448.1123 312.6006 450.7983 c
312.418 455.6899 L
308.6768 455.6899 283.9551 454.4058 282.9043 454.2856 c
281.0977 454.0518 L
281.0977 447.3921 281.4473 445.2866 281.915 442.8286 c
283.9023 442.4795 291.0342 442.0142 292.5537 441.7783 c
292.4619 437.249 L
290.707 437.3657 279.7393 437.249 276.3496 437.249 c
272.2578 437.249 262.3091 437.3374 259.9722 437.2178 c
260.2881 441.896 L
262.1592 442.0142 269.2305 442.7075 270.749 442.9448 c
270.9834 445.981 271.1006 450.7764 271.1006 455.8008 c
271.1006 461.9971 L
271.1006 464.1016 270.9834 470.1797 270.8691 472.2852 c
269.3467 472.5181 262.2769 472.9917 260.1719 473.1055 c
259.7993 476.646 L
261.1992 476.5278 270.96 476.7949 276.1035 476.7949 c
280.8975 476.7949 291.7637 476.7017 293.0498 476.8203 c
292.6709 473.1055 L
290.4482 472.9917 283.083 472.4058 281.7979 472.1729 c
281.4473 470.4189 281.0977 468.8989 281.0977 463.2881 c
280.9238 460.3608 L
283.0283 460.3608 309.1064 460.4648 312.3564 460.9287 c
312.3564 464.9561 L
312.3564 470.1016 313.1514 475.6587 312.5703 477.1807 c
311.2842 477.5322 304.3164 478.5117 302.0947 478.6279 c
302.4053 482.3608 L
303.8066 482.2432 310.376 482.2842 315.2861 482.1665 c
320.4268 482.1665 327.9023 481.9536 329.4219 482.1875 c
329.0771 479.1157 L
327.5566 478.9976 320.7783 477.2822 y
320.3164 474.0811 320.6563 469.4727 v
320.9365 465.647 321.0225 458.1221 Y
321.2158 449.7417 321.7334 442.9688 321.2666 442.6187 c
320.7021 442.1982 326.6328 441.8369 328.2705 441.6035 c
328.9121 440.4917 L
328.832 437.6143 l
f
*U
*u
389.1289 457.1445 m
389.6836 442.8682 376.6475 435.7852 359.7119 435.7852 c
352.666 435.7852 344.0908 437.1265 336.7676 441.5234 c
331.0527 444.9502 330.1074 449.3989 330.1074 454.9595 c
330.1074 466.4551 342.625 475.9858 361.7832 475.8623 c
369.0752 475.8623 376.1064 474.7524 381.7891 470.3208 c
386.8574 466.3672 387.7148 464.4028 388.6396 460.0742 C
389.1289 457.1445 l
f
1 D
379.7305 456.1685 m
380.1523 467.9834 370.9043 471.1294 359.2236 470.3276 c
353.1143 469.9063 340.6738 466.6738 340.6738 456.1685 c
340.6738 445.7852 350.2139 440.1626 362.9482 441.2705 c
372.7988 442.1289 377.9727 445.7559 379.2432 450.7983 C
379.7305 456.1685 l
f
*U
*u
0 D
474.584 448.6157 m
467.0156 449.3491 L
467.8076 453.1763 467.1172 482.5586 467.0547 485.6943 c
466.6689 491.8667 L
468.7734 491.4487 468.4541 491.668 477.3496 490.7319 c
482.7695 490.1631 483.4707 489.9209 485.2568 489.8516 c
482.9297 482.5327 l
480.9463 476.6772 475.1895 450.5703 474.584 448.6157 c
f
469.3584 433.0977 m
465.3047 433.4453 L
465.2617 442.2305 L
470.3965 441.5879 L
474.9941 441.374 L
473.7178 432.7739 l
469.3584 433.0977 L
f
*U
*u
460.1201 462.9458 m
461.1201 449.5781 445.6885 438.4688 426.3555 438.4688 c
418.3105 438.4688 411.4629 439.4482 403.5283 444.6953 c
397.0049 449.0117 393.8887 452.75 393.0742 460.1152 c
391.6309 473.1606 407.3652 484.1201 429.2363 483.9795 c
437.5635 483.9795 445.5859 482.7129 452.0762 477.6528 c
457.8643 473.1382 458.876 468.8584 459.9326 463.916 C
460.1201 462.9458 l
f
1 D
450.0352 461.0493 m
450.8369 473.8887 438.4688 478.5654 425.1348 477.6494 c
418.1563 477.1714 405.1162 473.0439 405.1162 461.0493 c
405.1162 449.1982 416.0273 443.2217 430.5664 444.4883 c
441.8135 445.4707 446.4971 449.6997 449.0557 455.4336 C
449.791 457.1445 450.0352 461.0493 v
f
*U
*u
0 D
483.916 441.2979 m
486.2441 441.2979 488.207 439.4541 488.207 437.0054 c
488.207 434.5649 486.2441 432.7227 483.916 432.7227 c
481.5771 432.7227 479.627 434.5649 479.627 437.0054 c
479.627 439.4541 481.5771 441.2979 483.916 441.2979 c
f
1 D
483.916 433.3433 m
485.875 433.3433 487.4463 434.9336 487.4463 437.0054 c
487.4463 439.0845 485.875 440.6748 483.916 440.6748 c
481.9453 440.6748 480.3896 439.0845 480.3896 437.0054 c
480.3896 434.9336 481.9453 433.3433 483.916 433.3433 c
f
0 D
482.2783 439.5249 m
484.1689 439.5249 L
485.3594 439.5249 485.9209 439.0513 485.9209 438.0923 c
485.9209 437.1831 485.3447 436.8032 484.5947 436.7227 c
486.0371 434.5083 L
485.2188 434.5083 L
483.8574 436.6621 L
483.0381 436.6621 L
483.0381 434.5083 L
482.2783 434.5083 L
482.2783 439.5249 l
f
1 D
483.0381 437.2871 m
483.8242 437.2871 L
484.5039 437.2871 485.1621 437.3198 485.1621 438.1289 c
485.1621 438.8188 484.5605 438.9004 484.043 438.9004 c
483.0381 438.9004 L
483.0381 437.2871 l
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
